
drive.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000001e  00800100  0000177c  00001810  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000177c  00000000  00000000  00000094  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000ae  0080011e  0080011e  0000182e  2**0
                  ALLOC
  3 .noinit       00000000  008001cc  008001cc  0000182e  2**0
                  CONTENTS
  4 .eeprom       00000000  00810000  00810000  0000182e  2**0
                  CONTENTS
  5 .stab         0000036c  00000000  00000000  00001830  2**2
                  CONTENTS, READONLY, DEBUGGING
  6 .stabstr      00000084  00000000  00000000  00001b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000028  00000000  00000000  00001c20  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_pubnames 000001df  00000000  00000000  00001c48  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000006e3  00000000  00000000  00001e27  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00000222  00000000  00000000  0000250a  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00000ca6  00000000  00000000  0000272c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    0000031e  00000000  00000000  000033d2  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 34 00 	jmp	0x68 <__ctors_end>
       4:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
       8:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
       c:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      10:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      14:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      18:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      1c:	0c 94 bf 06 	jmp	0xd7e <__vector_7>
      20:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      24:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      28:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      2c:	0c 94 a4 01 	jmp	0x348 <__vector_11>
      30:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      34:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      38:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      3c:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      40:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      44:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      48:	0c 94 7b 01 	jmp	0x2f6 <__vector_18>
      4c:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      50:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      54:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      58:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      5c:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      60:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>
      64:	0c 94 4f 00 	jmp	0x9e <__bad_interrupt>

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d4 e0       	ldi	r29, 0x04	; 4
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	11 e0       	ldi	r17, 0x01	; 1
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ec e7       	ldi	r30, 0x7C	; 124
      7c:	f7 e1       	ldi	r31, 0x17	; 23
      7e:	02 c0       	rjmp	.+4      	; 0x84 <.do_copy_data_start>

00000080 <.do_copy_data_loop>:
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0

00000084 <.do_copy_data_start>:
      84:	ae 31       	cpi	r26, 0x1E	; 30
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <.do_copy_data_loop>

0000008a <__do_clear_bss>:
      8a:	11 e0       	ldi	r17, 0x01	; 1
      8c:	ae e1       	ldi	r26, 0x1E	; 30
      8e:	b1 e0       	ldi	r27, 0x01	; 1
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	ac 3c       	cpi	r26, 0xCC	; 204
      96:	b1 07       	cpc	r27, r17
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0c 94 43 02 	jmp	0x486 <main>

0000009e <__bad_interrupt>:
      9e:	0c 94 00 00 	jmp	0x0 <__vectors>

000000a2 <initialize>:

// Initialize the Mind Control's ATmega168 microcontroller
void initialize(void)
{
  cli();
      a2:	f8 94       	cli

  // Set I/O pins
  DDRB = 0x10;
      a4:	80 e1       	ldi	r24, 0x10	; 16
      a6:	84 b9       	out	0x04, r24	; 4
  PORTB = 0xCF;
      a8:	8f ec       	ldi	r24, 0xCF	; 207
      aa:	85 b9       	out	0x05, r24	; 5
  DDRC = 0x00;
      ac:	17 b8       	out	0x07, r1	; 7
  PORTC = 0xFF;
      ae:	8f ef       	ldi	r24, 0xFF	; 255
      b0:	88 b9       	out	0x08, r24	; 8
  DDRD = 0xE6;
      b2:	86 ee       	ldi	r24, 0xE6	; 230
      b4:	8a b9       	out	0x0a, r24	; 10
  PORTD = 0x7D;
      b6:	8d e7       	ldi	r24, 0x7D	; 125
      b8:	8b b9       	out	0x0b, r24	; 11

  // Set up timer 1 to generate an interrupt every 1 ms
  TCCR1A = 0x00;
      ba:	10 92 80 00 	sts	0x0080, r1
  TCCR1B = (_BV(WGM12) | _BV(CS12));
      be:	8c e0       	ldi	r24, 0x0C	; 12
      c0:	80 93 81 00 	sts	0x0081, r24
  OCR1A = 71;
      c4:	87 e4       	ldi	r24, 0x47	; 71
      c6:	90 e0       	ldi	r25, 0x00	; 0
      c8:	90 93 89 00 	sts	0x0089, r25
      cc:	80 93 88 00 	sts	0x0088, r24
  TIMSK1 = _BV(OCIE1A);
      d0:	82 e0       	ldi	r24, 0x02	; 2
      d2:	80 93 6f 00 	sts	0x006F, r24

  // Set up the serial port with rx interrupt
  UBRR0 = 19;
      d6:	83 e1       	ldi	r24, 0x13	; 19
      d8:	90 e0       	ldi	r25, 0x00	; 0
      da:	90 93 c5 00 	sts	0x00C5, r25
      de:	80 93 c4 00 	sts	0x00C4, r24
  UCSR0B = (_BV(RXCIE0) | _BV(TXEN0) | _BV(RXEN0));
      e2:	88 e9       	ldi	r24, 0x98	; 152
      e4:	80 93 c1 00 	sts	0x00C1, r24
  UCSR0C = (_BV(UCSZ00) | _BV(UCSZ01));
      e8:	86 e0       	ldi	r24, 0x06	; 6
      ea:	80 93 c2 00 	sts	0x00C2, r24

  //Setting for ADC readings
 // PRR &= ~_BV(PRADC); // Turn off  power save
 // ADCSRA |= my_ADEN | ADPS_7; //(_BV(ADEN) | _BV(ADPS2) | _BV(ADPS1) | _BV(ADPS0)); // Enabled, prescaler = 128
 // ADMUX |= REFS_1; // set voltage reference
  // Turn on interrupts
  sei();
      ee:	78 94       	sei
      f0:	08 95       	ret

000000f2 <byteTx>:
      f2:	98 2f       	mov	r25, r24
      f4:	80 91 c0 00 	lds	r24, 0x00C0
      f8:	85 ff       	sbrs	r24, 5
      fa:	fc cf       	rjmp	.-8      	; 0xf4 <byteTx+0x2>
      fc:	90 93 c6 00 	sts	0x00C6, r25
     100:	08 95       	ret

00000102 <defineSongs>:
}




void powerOnRobot(void)
{
  // If Create's power is off, turn it on
  if(!RobotIsOn)
  {
      while(!RobotIsOn)
      {
          RobotPwrToggleLow;
          delayMs(500);  // Delay in this state
          RobotPwrToggleHigh;  // Low to high transition to toggle power
          delayMs(100);  // Delay in this state
          RobotPwrToggleLow;
      }
      delayMs(3500);  // Delay for startup
  }
}




// Switch the baud rate on both Create and module
void baud(uint8_t baud_code)
{
  if(baud_code <= 11)
  {
    byteTx(CmdBaud);
    UCSR0A |= _BV(TXC0);
    byteTx(baud_code);
    // Wait until transmit is complete
    while(!(UCSR0A & _BV(TXC0))) ;

    cli();

    // Switch the baud rate register
    if(baud_code == Baud115200)
      UBRR0 = Ubrr115200;
    else if(baud_code == Baud57600)
      UBRR0 = Ubrr57600;
    else if(baud_code == Baud38400)
      UBRR0 = Ubrr38400;
    else if(baud_code == Baud28800)
      UBRR0 = Ubrr28800;
    else if(baud_code == Baud19200)
      UBRR0 = Ubrr19200;
    else if(baud_code == Baud14400)
      UBRR0 = Ubrr14400;
    else if(baud_code == Baud9600)
      UBRR0 = Ubrr9600;
    else if(baud_code == Baud4800)
      UBRR0 = Ubrr4800;
    else if(baud_code == Baud2400)
      UBRR0 = Ubrr2400;
    else if(baud_code == Baud1200)
      UBRR0 = Ubrr1200;
    else if(baud_code == Baud600)
      UBRR0 = Ubrr600;
    else if(baud_code == Baud300)
      UBRR0 = Ubrr300;

    sei();

    delayMs(100);
  }
}




// Send Create drive commands in terms of velocity and radius
void drive(int16_t velocity, int16_t radius)
{
  byteTx(CmdDrive);
  byteTx((uint8_t)((velocity >> 8) & 0x00FF));
  byteTx((uint8_t)(velocity & 0x00FF));
  byteTx((uint8_t)((radius >> 8) & 0x00FF));
  byteTx((uint8_t)(radius & 0x00FF));
}




// Return an angle value in the range 53 to 180 (degrees)
uint16_t randomAngle(void)
{
    return (53 + ((uint16_t)(random() & 0xFF) >> 1));
}



// Define songs to be played later
void defineSongs(void)
{
  // Reset song
  byteTx(CmdSong);
     102:	8c e8       	ldi	r24, 0x8C	; 140
     104:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(RESET_SONG);
     108:	80 e0       	ldi	r24, 0x00	; 0
     10a:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(4);
     10e:	84 e0       	ldi	r24, 0x04	; 4
     110:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(60);
     114:	8c e3       	ldi	r24, 0x3C	; 60
     116:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(6);
     11a:	86 e0       	ldi	r24, 0x06	; 6
     11c:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(72);
     120:	88 e4       	ldi	r24, 0x48	; 72
     122:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(6);
     126:	86 e0       	ldi	r24, 0x06	; 6
     128:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(84);
     12c:	84 e5       	ldi	r24, 0x54	; 84
     12e:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(6);
     132:	86 e0       	ldi	r24, 0x06	; 6
     134:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(96);
     138:	80 e6       	ldi	r24, 0x60	; 96
     13a:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(6);
     13e:	86 e0       	ldi	r24, 0x06	; 6
     140:	0e 94 79 00 	call	0xf2 <byteTx>

  // Start song
  byteTx(CmdSong);
     144:	8c e8       	ldi	r24, 0x8C	; 140
     146:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(START_SONG);
     14a:	81 e0       	ldi	r24, 0x01	; 1
     14c:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(6);
     150:	86 e0       	ldi	r24, 0x06	; 6
     152:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(69);
     156:	85 e4       	ldi	r24, 0x45	; 69
     158:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(18);
     15c:	82 e1       	ldi	r24, 0x12	; 18
     15e:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(72);
     162:	88 e4       	ldi	r24, 0x48	; 72
     164:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(12);
     168:	8c e0       	ldi	r24, 0x0C	; 12
     16a:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(74);
     16e:	8a e4       	ldi	r24, 0x4A	; 74
     170:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(12);
     174:	8c e0       	ldi	r24, 0x0C	; 12
     176:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(72);
     17a:	88 e4       	ldi	r24, 0x48	; 72
     17c:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(12);
     180:	8c e0       	ldi	r24, 0x0C	; 12
     182:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(69);
     186:	85 e4       	ldi	r24, 0x45	; 69
     188:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(12);
     18c:	8c e0       	ldi	r24, 0x0C	; 12
     18e:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(77);
     192:	8d e4       	ldi	r24, 0x4D	; 77
     194:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(24);
     198:	88 e1       	ldi	r24, 0x18	; 24
     19a:	0e 94 79 00 	call	0xf2 <byteTx>

  // Bump song
  byteTx(CmdSong);
     19e:	8c e8       	ldi	r24, 0x8C	; 140
     1a0:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(BUMP_SONG);
     1a4:	82 e0       	ldi	r24, 0x02	; 2
     1a6:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(2);
     1aa:	82 e0       	ldi	r24, 0x02	; 2
     1ac:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(74);
     1b0:	8a e4       	ldi	r24, 0x4A	; 74
     1b2:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(12);
     1b6:	8c e0       	ldi	r24, 0x0C	; 12
     1b8:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(59);
     1bc:	8b e3       	ldi	r24, 0x3B	; 59
     1be:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(24);
     1c2:	88 e1       	ldi	r24, 0x18	; 24
     1c4:	0e 94 79 00 	call	0xf2 <byteTx>

  // End song
  byteTx(CmdSong);
     1c8:	8c e8       	ldi	r24, 0x8C	; 140
     1ca:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(END_SONG);
     1ce:	83 e0       	ldi	r24, 0x03	; 3
     1d0:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(5);
     1d4:	85 e0       	ldi	r24, 0x05	; 5
     1d6:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(77);
     1da:	8d e4       	ldi	r24, 0x4D	; 77
     1dc:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(18);
     1e0:	82 e1       	ldi	r24, 0x12	; 18
     1e2:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(74);
     1e6:	8a e4       	ldi	r24, 0x4A	; 74
     1e8:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(12);
     1ec:	8c e0       	ldi	r24, 0x0C	; 12
     1ee:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(72);
     1f2:	88 e4       	ldi	r24, 0x48	; 72
     1f4:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(12);
     1f8:	8c e0       	ldi	r24, 0x0C	; 12
     1fa:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(69);
     1fe:	85 e4       	ldi	r24, 0x45	; 69
     200:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(12);
     204:	8c e0       	ldi	r24, 0x0C	; 12
     206:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(65);
     20a:	81 e4       	ldi	r24, 0x41	; 65
     20c:	0e 94 79 00 	call	0xf2 <byteTx>
  byteTx(24);
     210:	88 e1       	ldi	r24, 0x18	; 24
     212:	0e 94 79 00 	call	0xf2 <byteTx>
     216:	08 95       	ret

00000218 <drive>:
     218:	ef 92       	push	r14
     21a:	ff 92       	push	r15
     21c:	0f 93       	push	r16
     21e:	1f 93       	push	r17
     220:	8c 01       	movw	r16, r24
     222:	7b 01       	movw	r14, r22
     224:	89 e8       	ldi	r24, 0x89	; 137
     226:	0e 94 79 00 	call	0xf2 <byteTx>
     22a:	81 2f       	mov	r24, r17
     22c:	99 27       	eor	r25, r25
     22e:	87 fd       	sbrc	r24, 7
     230:	9a 95       	dec	r25
     232:	0e 94 79 00 	call	0xf2 <byteTx>
     236:	80 2f       	mov	r24, r16
     238:	0e 94 79 00 	call	0xf2 <byteTx>
     23c:	8f 2d       	mov	r24, r15
     23e:	99 27       	eor	r25, r25
     240:	87 fd       	sbrc	r24, 7
     242:	9a 95       	dec	r25
     244:	0e 94 79 00 	call	0xf2 <byteTx>
     248:	8e 2d       	mov	r24, r14
     24a:	0e 94 79 00 	call	0xf2 <byteTx>
     24e:	1f 91       	pop	r17
     250:	0f 91       	pop	r16
     252:	ff 90       	pop	r15
     254:	ef 90       	pop	r14
     256:	08 95       	ret

00000258 <delayAndUpdateSensors>:
     258:	21 e0       	ldi	r18, 0x01	; 1
     25a:	20 93 24 01 	sts	0x0124, r18
     25e:	90 93 26 01 	sts	0x0126, r25
     262:	80 93 25 01 	sts	0x0125, r24
     266:	80 91 24 01 	lds	r24, 0x0124
     26a:	88 23       	and	r24, r24
     26c:	09 f4       	brne	.+2      	; 0x270 <delayAndUpdateSensors+0x18>
     26e:	42 c0       	rjmp	.+132    	; 0x2f4 <delayAndUpdateSensors+0x9c>
     270:	80 91 23 01 	lds	r24, 0x0123
     274:	88 23       	and	r24, r24
     276:	b9 f7       	brne	.-18     	; 0x266 <delayAndUpdateSensors+0xe>
     278:	a4 e6       	ldi	r26, 0x64	; 100
     27a:	b1 e0       	ldi	r27, 0x01	; 1
     27c:	e8 e9       	ldi	r30, 0x98	; 152
     27e:	f1 e0       	ldi	r31, 0x01	; 1
     280:	93 e3       	ldi	r25, 0x33	; 51
     282:	8d 91       	ld	r24, X+
     284:	81 93       	st	Z+, r24
     286:	91 50       	subi	r25, 0x01	; 1
     288:	97 ff       	sbrs	r25, 7
     28a:	fb cf       	rjmp	.-10     	; 0x282 <delayAndUpdateSensors+0x2a>
     28c:	80 91 a4 01 	lds	r24, 0x01A4
     290:	99 27       	eor	r25, r25
     292:	38 2f       	mov	r19, r24
     294:	22 27       	eor	r18, r18
     296:	80 91 a5 01 	lds	r24, 0x01A5
     29a:	99 27       	eor	r25, r25
     29c:	28 2b       	or	r18, r24
     29e:	39 2b       	or	r19, r25
     2a0:	80 91 20 01 	lds	r24, 0x0120
     2a4:	90 91 21 01 	lds	r25, 0x0121
     2a8:	82 0f       	add	r24, r18
     2aa:	93 1f       	adc	r25, r19
     2ac:	90 93 21 01 	sts	0x0121, r25
     2b0:	80 93 20 01 	sts	0x0120, r24
     2b4:	80 91 a6 01 	lds	r24, 0x01A6
     2b8:	99 27       	eor	r25, r25
     2ba:	38 2f       	mov	r19, r24
     2bc:	22 27       	eor	r18, r18
     2be:	80 91 a7 01 	lds	r24, 0x01A7
     2c2:	99 27       	eor	r25, r25
     2c4:	28 2b       	or	r18, r24
     2c6:	39 2b       	or	r19, r25
     2c8:	80 91 1e 01 	lds	r24, 0x011E
     2cc:	90 91 1f 01 	lds	r25, 0x011F
     2d0:	82 0f       	add	r24, r18
     2d2:	93 1f       	adc	r25, r19
     2d4:	90 93 1f 01 	sts	0x011F, r25
     2d8:	80 93 1e 01 	sts	0x011E, r24
     2dc:	8e e8       	ldi	r24, 0x8E	; 142
     2de:	0e 94 79 00 	call	0xf2 <byteTx>
     2e2:	86 e0       	ldi	r24, 0x06	; 6
     2e4:	0e 94 79 00 	call	0xf2 <byteTx>
     2e8:	10 92 22 01 	sts	0x0122, r1
     2ec:	81 e0       	ldi	r24, 0x01	; 1
     2ee:	80 93 23 01 	sts	0x0123, r24
     2f2:	b9 cf       	rjmp	.-142    	; 0x266 <delayAndUpdateSensors+0xe>
     2f4:	08 95       	ret

000002f6 <__vector_18>:
     2f6:	1f 92       	push	r1
     2f8:	0f 92       	push	r0
     2fa:	0f b6       	in	r0, 0x3f	; 63
     2fc:	0f 92       	push	r0
     2fe:	11 24       	eor	r1, r1
     300:	8f 93       	push	r24
     302:	9f 93       	push	r25
     304:	ef 93       	push	r30
     306:	ff 93       	push	r31
     308:	78 94       	sei
     30a:	90 91 c6 00 	lds	r25, 0x00C6
     30e:	80 91 23 01 	lds	r24, 0x0123
     312:	88 23       	and	r24, r24
     314:	81 f0       	breq	.+32     	; 0x336 <__vector_18+0x40>
     316:	80 91 22 01 	lds	r24, 0x0122
     31a:	e8 2f       	mov	r30, r24
     31c:	ff 27       	eor	r31, r31
     31e:	ec 59       	subi	r30, 0x9C	; 156
     320:	fe 4f       	sbci	r31, 0xFE	; 254
     322:	90 83       	st	Z, r25
     324:	8f 5f       	subi	r24, 0xFF	; 255
     326:	80 93 22 01 	sts	0x0122, r24
     32a:	80 91 22 01 	lds	r24, 0x0122
     32e:	84 33       	cpi	r24, 0x34	; 52
     330:	10 f0       	brcs	.+4      	; 0x336 <__vector_18+0x40>
     332:	10 92 23 01 	sts	0x0123, r1
     336:	ff 91       	pop	r31
     338:	ef 91       	pop	r30
     33a:	9f 91       	pop	r25
     33c:	8f 91       	pop	r24
     33e:	0f 90       	pop	r0
     340:	0f be       	out	0x3f, r0	; 63
     342:	0f 90       	pop	r0
     344:	1f 90       	pop	r1
     346:	18 95       	reti

00000348 <__vector_11>:
     348:	1f 92       	push	r1
     34a:	0f 92       	push	r0
     34c:	0f b6       	in	r0, 0x3f	; 63
     34e:	0f 92       	push	r0
     350:	11 24       	eor	r1, r1
     352:	8f 93       	push	r24
     354:	9f 93       	push	r25
     356:	78 94       	sei
     358:	80 91 25 01 	lds	r24, 0x0125
     35c:	90 91 26 01 	lds	r25, 0x0126
     360:	89 2b       	or	r24, r25
     362:	51 f0       	breq	.+20     	; 0x378 <__vector_11+0x30>
     364:	80 91 25 01 	lds	r24, 0x0125
     368:	90 91 26 01 	lds	r25, 0x0126
     36c:	01 97       	sbiw	r24, 0x01	; 1
     36e:	90 93 26 01 	sts	0x0126, r25
     372:	80 93 25 01 	sts	0x0125, r24
     376:	02 c0       	rjmp	.+4      	; 0x37c <__vector_11+0x34>
     378:	10 92 24 01 	sts	0x0124, r1
     37c:	9f 91       	pop	r25
     37e:	8f 91       	pop	r24
     380:	0f 90       	pop	r0
     382:	0f be       	out	0x3f, r0	; 63
     384:	0f 90       	pop	r0
     386:	1f 90       	pop	r1
     388:	18 95       	reti

0000038a <delayMs>:
     38a:	9c 01       	movw	r18, r24
     38c:	81 e0       	ldi	r24, 0x01	; 1
     38e:	80 93 24 01 	sts	0x0124, r24
     392:	30 93 26 01 	sts	0x0126, r19
     396:	20 93 25 01 	sts	0x0125, r18
     39a:	80 91 24 01 	lds	r24, 0x0124
     39e:	88 23       	and	r24, r24
     3a0:	e1 f7       	brne	.-8      	; 0x39a <delayMs+0x10>
     3a2:	08 95       	ret

000003a4 <baud>:
     3a4:	cf 93       	push	r28
     3a6:	c8 2f       	mov	r28, r24
     3a8:	8c 30       	cpi	r24, 0x0C	; 12
     3aa:	08 f0       	brcs	.+2      	; 0x3ae <baud+0xa>
     3ac:	54 c0       	rjmp	.+168    	; 0x456 <baud+0xb2>
     3ae:	81 e8       	ldi	r24, 0x81	; 129
     3b0:	0e 94 79 00 	call	0xf2 <byteTx>
     3b4:	80 91 c0 00 	lds	r24, 0x00C0
     3b8:	80 64       	ori	r24, 0x40	; 64
     3ba:	80 93 c0 00 	sts	0x00C0, r24
     3be:	8c 2f       	mov	r24, r28
     3c0:	0e 94 79 00 	call	0xf2 <byteTx>
     3c4:	80 91 c0 00 	lds	r24, 0x00C0
     3c8:	86 ff       	sbrs	r24, 6
     3ca:	fc cf       	rjmp	.-8      	; 0x3c4 <baud+0x20>
     3cc:	f8 94       	cli
     3ce:	cb 30       	cpi	r28, 0x0B	; 11
     3d0:	19 f4       	brne	.+6      	; 0x3d8 <baud+0x34>
     3d2:	89 e0       	ldi	r24, 0x09	; 9
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	36 c0       	rjmp	.+108    	; 0x444 <baud+0xa0>
     3d8:	ca 30       	cpi	r28, 0x0A	; 10
     3da:	19 f4       	brne	.+6      	; 0x3e2 <baud+0x3e>
     3dc:	83 e1       	ldi	r24, 0x13	; 19
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	31 c0       	rjmp	.+98     	; 0x444 <baud+0xa0>
     3e2:	c9 30       	cpi	r28, 0x09	; 9
     3e4:	19 f4       	brne	.+6      	; 0x3ec <baud+0x48>
     3e6:	8d e1       	ldi	r24, 0x1D	; 29
     3e8:	90 e0       	ldi	r25, 0x00	; 0
     3ea:	2c c0       	rjmp	.+88     	; 0x444 <baud+0xa0>
     3ec:	c8 30       	cpi	r28, 0x08	; 8
     3ee:	19 f4       	brne	.+6      	; 0x3f6 <baud+0x52>
     3f0:	87 e2       	ldi	r24, 0x27	; 39
     3f2:	90 e0       	ldi	r25, 0x00	; 0
     3f4:	27 c0       	rjmp	.+78     	; 0x444 <baud+0xa0>
     3f6:	c7 30       	cpi	r28, 0x07	; 7
     3f8:	19 f4       	brne	.+6      	; 0x400 <baud+0x5c>
     3fa:	8b e3       	ldi	r24, 0x3B	; 59
     3fc:	90 e0       	ldi	r25, 0x00	; 0
     3fe:	22 c0       	rjmp	.+68     	; 0x444 <baud+0xa0>
     400:	c6 30       	cpi	r28, 0x06	; 6
     402:	19 f4       	brne	.+6      	; 0x40a <baud+0x66>
     404:	8f e4       	ldi	r24, 0x4F	; 79
     406:	90 e0       	ldi	r25, 0x00	; 0
     408:	1d c0       	rjmp	.+58     	; 0x444 <baud+0xa0>
     40a:	c5 30       	cpi	r28, 0x05	; 5
     40c:	19 f4       	brne	.+6      	; 0x414 <baud+0x70>
     40e:	87 e7       	ldi	r24, 0x77	; 119
     410:	90 e0       	ldi	r25, 0x00	; 0
     412:	18 c0       	rjmp	.+48     	; 0x444 <baud+0xa0>
     414:	c4 30       	cpi	r28, 0x04	; 4
     416:	19 f4       	brne	.+6      	; 0x41e <baud+0x7a>
     418:	8f ee       	ldi	r24, 0xEF	; 239
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	13 c0       	rjmp	.+38     	; 0x444 <baud+0xa0>
     41e:	c3 30       	cpi	r28, 0x03	; 3
     420:	19 f4       	brne	.+6      	; 0x428 <baud+0x84>
     422:	8f ed       	ldi	r24, 0xDF	; 223
     424:	91 e0       	ldi	r25, 0x01	; 1
     426:	0e c0       	rjmp	.+28     	; 0x444 <baud+0xa0>
     428:	c2 30       	cpi	r28, 0x02	; 2
     42a:	19 f4       	brne	.+6      	; 0x432 <baud+0x8e>
     42c:	8f eb       	ldi	r24, 0xBF	; 191
     42e:	93 e0       	ldi	r25, 0x03	; 3
     430:	09 c0       	rjmp	.+18     	; 0x444 <baud+0xa0>
     432:	c1 30       	cpi	r28, 0x01	; 1
     434:	19 f4       	brne	.+6      	; 0x43c <baud+0x98>
     436:	8f e7       	ldi	r24, 0x7F	; 127
     438:	97 e0       	ldi	r25, 0x07	; 7
     43a:	04 c0       	rjmp	.+8      	; 0x444 <baud+0xa0>
     43c:	cc 23       	and	r28, r28
     43e:	31 f4       	brne	.+12     	; 0x44c <baud+0xa8>
     440:	8f ef       	ldi	r24, 0xFF	; 255
     442:	9e e0       	ldi	r25, 0x0E	; 14
     444:	90 93 c5 00 	sts	0x00C5, r25
     448:	80 93 c4 00 	sts	0x00C4, r24
     44c:	78 94       	sei
     44e:	84 e6       	ldi	r24, 0x64	; 100
     450:	90 e0       	ldi	r25, 0x00	; 0
     452:	0e 94 c5 01 	call	0x38a <delayMs>
     456:	cf 91       	pop	r28
     458:	08 95       	ret

0000045a <powerOnRobot>:
     45a:	1d 99       	sbic	0x03, 5	; 3
     45c:	13 c0       	rjmp	.+38     	; 0x484 <powerOnRobot+0x2a>
     45e:	1d 99       	sbic	0x03, 5	; 3
     460:	0d c0       	rjmp	.+26     	; 0x47c <powerOnRobot+0x22>
     462:	5f 98       	cbi	0x0b, 7	; 11
     464:	84 ef       	ldi	r24, 0xF4	; 244
     466:	91 e0       	ldi	r25, 0x01	; 1
     468:	0e 94 c5 01 	call	0x38a <delayMs>
     46c:	5f 9a       	sbi	0x0b, 7	; 11
     46e:	84 e6       	ldi	r24, 0x64	; 100
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	0e 94 c5 01 	call	0x38a <delayMs>
     476:	5f 98       	cbi	0x0b, 7	; 11
     478:	1d 9b       	sbis	0x03, 5	; 3
     47a:	f3 cf       	rjmp	.-26     	; 0x462 <powerOnRobot+0x8>
     47c:	8c ea       	ldi	r24, 0xAC	; 172
     47e:	9d e0       	ldi	r25, 0x0D	; 13
     480:	0e 94 c5 01 	call	0x38a <delayMs>
     484:	08 95       	ret

00000486 <main>:
     486:	c9 ed       	ldi	r28, 0xD9	; 217
     488:	d4 e0       	ldi	r29, 0x04	; 4
     48a:	de bf       	out	0x3e, r29	; 62
     48c:	cd bf       	out	0x3d, r28	; 61
     48e:	33 e6       	ldi	r19, 0x63	; 99
     490:	63 2e       	mov	r6, r19
     492:	ee 24       	eor	r14, r14
     494:	81 e0       	ldi	r24, 0x01	; 1
     496:	8d a3       	std	Y+37, r24	; 0x25
     498:	cc 24       	eor	r12, r12
     49a:	dd 24       	eor	r13, r13
     49c:	98 2e       	mov	r9, r24
     49e:	3e 2c       	mov	r3, r14
     4a0:	ee a2       	std	Y+38, r14	; 0x26
     4a2:	28 2e       	mov	r2, r24
     4a4:	5e 2c       	mov	r5, r14
     4a6:	7e 2c       	mov	r7, r14
     4a8:	4e 2c       	mov	r4, r14
     4aa:	8e 2c       	mov	r8, r14
     4ac:	fe 2c       	mov	r15, r14
     4ae:	0e 94 51 00 	call	0xa2 <initialize>
     4b2:	63 e1       	ldi	r22, 0x13	; 19
     4b4:	89 2d       	mov	r24, r9
     4b6:	0e 94 e7 05 	call	0xbce <init_aux_UART>
     4ba:	8b b1       	in	r24, 0x0b	; 11
     4bc:	80 66       	ori	r24, 0x60	; 96
     4be:	8b b9       	out	0x0b, r24	; 11
     4c0:	0e 94 2d 02 	call	0x45a <powerOnRobot>
     4c4:	80 e8       	ldi	r24, 0x80	; 128
     4c6:	0e 94 79 00 	call	0xf2 <byteTx>
     4ca:	88 e0       	ldi	r24, 0x08	; 8
     4cc:	0e 94 d2 01 	call	0x3a4 <baud>
     4d0:	0e 94 81 00 	call	0x102 <defineSongs>
     4d4:	82 e8       	ldi	r24, 0x82	; 130
     4d6:	0e 94 79 00 	call	0xf2 <byteTx>
     4da:	84 e8       	ldi	r24, 0x84	; 132
     4dc:	0e 94 79 00 	call	0xf2 <byteTx>
     4e0:	60 e0       	ldi	r22, 0x00	; 0
     4e2:	70 e8       	ldi	r23, 0x80	; 128
     4e4:	c6 01       	movw	r24, r12
     4e6:	0e 94 0c 01 	call	0x218 <drive>
     4ea:	8d e8       	ldi	r24, 0x8D	; 141
     4ec:	0e 94 79 00 	call	0xf2 <byteTx>
     4f0:	8e 2d       	mov	r24, r14
     4f2:	0e 94 79 00 	call	0xf2 <byteTx>
     4f6:	8e ee       	ldi	r24, 0xEE	; 238
     4f8:	92 e0       	ldi	r25, 0x02	; 2
     4fa:	0e 94 2c 01 	call	0x258 <delayAndUpdateSensors>
     4fe:	0e 94 bc 06 	call	0xd78 <aux_rcv_disable>
     502:	80 91 98 01 	lds	r24, 0x0198
     506:	99 27       	eor	r25, r25
     508:	9f 93       	push	r25
     50a:	8f 93       	push	r24
     50c:	80 91 bf 01 	lds	r24, 0x01BF
     510:	99 27       	eor	r25, r25
     512:	9f 93       	push	r25
     514:	8f 93       	push	r24
     516:	20 e0       	ldi	r18, 0x00	; 0
     518:	a2 2e       	mov	r10, r18
     51a:	21 e0       	ldi	r18, 0x01	; 1
     51c:	b2 2e       	mov	r11, r18
     51e:	bf 92       	push	r11
     520:	af 92       	push	r10
     522:	8e 01       	movw	r16, r28
     524:	0b 5f       	subi	r16, 0xFB	; 251
     526:	1f 4f       	sbci	r17, 0xFF	; 255
     528:	1f 93       	push	r17
     52a:	0f 93       	push	r16
     52c:	0e 94 44 08 	call	0x1088 <sprintf>
     530:	c8 01       	movw	r24, r16
     532:	0e 94 68 06 	call	0xcd0 <aux_send_line>
     536:	80 ea       	ldi	r24, 0xA0	; 160
     538:	96 e8       	ldi	r25, 0x86	; 134
     53a:	a1 e0       	ldi	r26, 0x01	; 1
     53c:	b0 e0       	ldi	r27, 0x00	; 0
     53e:	89 83       	std	Y+1, r24	; 0x01
     540:	9a 83       	std	Y+2, r25	; 0x02
     542:	ab 83       	std	Y+3, r26	; 0x03
     544:	bc 83       	std	Y+4, r27	; 0x04
     546:	ad b7       	in	r26, 0x3d	; 61
     548:	be b7       	in	r27, 0x3e	; 62
     54a:	18 96       	adiw	r26, 0x08	; 8
     54c:	0f b6       	in	r0, 0x3f	; 63
     54e:	f8 94       	cli
     550:	be bf       	out	0x3e, r27	; 62
     552:	0f be       	out	0x3f, r0	; 63
     554:	ad bf       	out	0x3d, r26	; 61
     556:	89 81       	ldd	r24, Y+1	; 0x01
     558:	9a 81       	ldd	r25, Y+2	; 0x02
     55a:	ab 81       	ldd	r26, Y+3	; 0x03
     55c:	bc 81       	ldd	r27, Y+4	; 0x04
     55e:	00 97       	sbiw	r24, 0x00	; 0
     560:	a1 05       	cpc	r26, r1
     562:	b1 05       	cpc	r27, r1
     564:	61 f0       	breq	.+24     	; 0x57e <__stack+0x7f>
     566:	89 81       	ldd	r24, Y+1	; 0x01
     568:	9a 81       	ldd	r25, Y+2	; 0x02
     56a:	ab 81       	ldd	r26, Y+3	; 0x03
     56c:	bc 81       	ldd	r27, Y+4	; 0x04
     56e:	01 97       	sbiw	r24, 0x01	; 1
     570:	a1 09       	sbc	r26, r1
     572:	b1 09       	sbc	r27, r1
     574:	89 83       	std	Y+1, r24	; 0x01
     576:	9a 83       	std	Y+2, r25	; 0x02
     578:	ab 83       	std	Y+3, r26	; 0x03
     57a:	bc 83       	std	Y+4, r27	; 0x04
     57c:	ec cf       	rjmp	.-40     	; 0x556 <__stack+0x57>
     57e:	63 94       	inc	r6
     580:	b3 e6       	ldi	r27, 0x63	; 99
     582:	b6 15       	cp	r27, r6
     584:	38 f5       	brcc	.+78     	; 0x5d4 <__stack+0xd5>
     586:	66 24       	eor	r6, r6
     588:	86 2d       	mov	r24, r6
     58a:	9d a1       	ldd	r25, Y+37	; 0x25
     58c:	99 23       	and	r25, r25
     58e:	09 f4       	brne	.+2      	; 0x592 <__stack+0x93>
     590:	81 e0       	ldi	r24, 0x01	; 1
     592:	8d a3       	std	Y+37, r24	; 0x25
     594:	88 23       	and	r24, r24
     596:	79 f0       	breq	.+30     	; 0x5b6 <__stack+0xb7>
     598:	8b e8       	ldi	r24, 0x8B	; 139
     59a:	0e 94 79 00 	call	0xf2 <byteTx>
     59e:	8a e0       	ldi	r24, 0x0A	; 10
     5a0:	0e 94 79 00 	call	0xf2 <byteTx>
     5a4:	80 e8       	ldi	r24, 0x80	; 128
     5a6:	0e 94 79 00 	call	0xf2 <byteTx>
     5aa:	8f ef       	ldi	r24, 0xFF	; 255
     5ac:	0e 94 79 00 	call	0xf2 <byteTx>
     5b0:	8b b1       	in	r24, 0x0b	; 11
     5b2:	80 66       	ori	r24, 0x60	; 96
     5b4:	0e c0       	rjmp	.+28     	; 0x5d2 <__stack+0xd3>
     5b6:	8b e8       	ldi	r24, 0x8B	; 139
     5b8:	0e 94 79 00 	call	0xf2 <byteTx>
     5bc:	86 2d       	mov	r24, r6
     5be:	0e 94 79 00 	call	0xf2 <byteTx>
     5c2:	86 2d       	mov	r24, r6
     5c4:	0e 94 79 00 	call	0xf2 <byteTx>
     5c8:	86 2d       	mov	r24, r6
     5ca:	0e 94 79 00 	call	0xf2 <byteTx>
     5ce:	8b b1       	in	r24, 0x0b	; 11
     5d0:	8f 79       	andi	r24, 0x9F	; 159
     5d2:	8b b9       	out	0x0b, r24	; 11
     5d4:	8a e0       	ldi	r24, 0x0A	; 10
     5d6:	90 e0       	ldi	r25, 0x00	; 0
     5d8:	0e 94 2c 01 	call	0x258 <delayAndUpdateSensors>
     5dc:	4c 99       	sbic	0x09, 4	; 9
     5de:	8f cf       	rjmp	.-226    	; 0x4fe <main+0x78>
     5e0:	8d e8       	ldi	r24, 0x8D	; 141
     5e2:	0e 94 79 00 	call	0xf2 <byteTx>
     5e6:	81 e0       	ldi	r24, 0x01	; 1
     5e8:	0e 94 79 00 	call	0xf2 <byteTx>
     5ec:	8d ef       	ldi	r24, 0xFD	; 253
     5ee:	9a e0       	ldi	r25, 0x0A	; 10
     5f0:	0e 94 2c 01 	call	0x258 <delayAndUpdateSensors>
     5f4:	0e 94 bc 06 	call	0xd78 <aux_rcv_disable>
     5f8:	80 91 98 01 	lds	r24, 0x0198
     5fc:	99 27       	eor	r25, r25
     5fe:	9f 93       	push	r25
     600:	8f 93       	push	r24
     602:	80 91 bf 01 	lds	r24, 0x01BF
     606:	99 27       	eor	r25, r25
     608:	9f 93       	push	r25
     60a:	8f 93       	push	r24
     60c:	bf 92       	push	r11
     60e:	af 92       	push	r10
     610:	1f 93       	push	r17
     612:	0f 93       	push	r16
     614:	0e 94 44 08 	call	0x1088 <sprintf>
     618:	c8 01       	movw	r24, r16
     61a:	0e 94 68 06 	call	0xcd0 <aux_send_line>
     61e:	80 ea       	ldi	r24, 0xA0	; 160
     620:	96 e8       	ldi	r25, 0x86	; 134
     622:	a1 e0       	ldi	r26, 0x01	; 1
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	89 83       	std	Y+1, r24	; 0x01
     628:	9a 83       	std	Y+2, r25	; 0x02
     62a:	ab 83       	std	Y+3, r26	; 0x03
     62c:	bc 83       	std	Y+4, r27	; 0x04
     62e:	ad b7       	in	r26, 0x3d	; 61
     630:	be b7       	in	r27, 0x3e	; 62
     632:	18 96       	adiw	r26, 0x08	; 8
     634:	0f b6       	in	r0, 0x3f	; 63
     636:	f8 94       	cli
     638:	be bf       	out	0x3e, r27	; 62
     63a:	0f be       	out	0x3f, r0	; 63
     63c:	ad bf       	out	0x3d, r26	; 61
     63e:	89 81       	ldd	r24, Y+1	; 0x01
     640:	9a 81       	ldd	r25, Y+2	; 0x02
     642:	ab 81       	ldd	r26, Y+3	; 0x03
     644:	bc 81       	ldd	r27, Y+4	; 0x04
     646:	00 97       	sbiw	r24, 0x00	; 0
     648:	a1 05       	cpc	r26, r1
     64a:	b1 05       	cpc	r27, r1
     64c:	09 f4       	brne	.+2      	; 0x650 <__stack+0x151>
     64e:	98 c2       	rjmp	.+1328   	; 0xb80 <__stack+0x681>
     650:	89 81       	ldd	r24, Y+1	; 0x01
     652:	9a 81       	ldd	r25, Y+2	; 0x02
     654:	ab 81       	ldd	r26, Y+3	; 0x03
     656:	bc 81       	ldd	r27, Y+4	; 0x04
     658:	01 97       	sbiw	r24, 0x01	; 1
     65a:	a1 09       	sbc	r26, r1
     65c:	b1 09       	sbc	r27, r1
     65e:	89 83       	std	Y+1, r24	; 0x01
     660:	9a 83       	std	Y+2, r25	; 0x02
     662:	ab 83       	std	Y+3, r26	; 0x03
     664:	bc 83       	std	Y+4, r27	; 0x04
     666:	eb cf       	rjmp	.-42     	; 0x63e <__stack+0x13f>
     668:	80 91 98 01 	lds	r24, 0x0198
     66c:	99 27       	eor	r25, r25
     66e:	8c 71       	andi	r24, 0x1C	; 28
     670:	90 70       	andi	r25, 0x00	; 0
     672:	89 2b       	or	r24, r25
     674:	09 f0       	breq	.+2      	; 0x678 <__stack+0x179>
     676:	8b c2       	rjmp	.+1302   	; 0xb8e <__stack+0x68f>
     678:	0e 94 bc 06 	call	0xd78 <aux_rcv_disable>
     67c:	8e 01       	movw	r16, r28
     67e:	0b 5f       	subi	r16, 0xFB	; 251
     680:	1f 4f       	sbci	r17, 0xFF	; 255
     682:	80 e1       	ldi	r24, 0x10	; 16
     684:	e8 e0       	ldi	r30, 0x08	; 8
     686:	f1 e0       	ldi	r31, 0x01	; 1
     688:	d8 01       	movw	r26, r16
     68a:	01 90       	ld	r0, Z+
     68c:	0d 92       	st	X+, r0
     68e:	8a 95       	dec	r24
     690:	e1 f7       	brne	.-8      	; 0x68a <__stack+0x18b>
     692:	c8 01       	movw	r24, r16
     694:	0e 94 68 06 	call	0xcd0 <aux_send_line>
     698:	80 ea       	ldi	r24, 0xA0	; 160
     69a:	96 e8       	ldi	r25, 0x86	; 134
     69c:	a1 e0       	ldi	r26, 0x01	; 1
     69e:	b0 e0       	ldi	r27, 0x00	; 0
     6a0:	89 83       	std	Y+1, r24	; 0x01
     6a2:	9a 83       	std	Y+2, r25	; 0x02
     6a4:	ab 83       	std	Y+3, r26	; 0x03
     6a6:	bc 83       	std	Y+4, r27	; 0x04
     6a8:	89 81       	ldd	r24, Y+1	; 0x01
     6aa:	9a 81       	ldd	r25, Y+2	; 0x02
     6ac:	ab 81       	ldd	r26, Y+3	; 0x03
     6ae:	bc 81       	ldd	r27, Y+4	; 0x04
     6b0:	00 97       	sbiw	r24, 0x00	; 0
     6b2:	a1 05       	cpc	r26, r1
     6b4:	b1 05       	cpc	r27, r1
     6b6:	41 f0       	breq	.+16     	; 0x6c8 <__stack+0x1c9>
     6b8:	89 81       	ldd	r24, Y+1	; 0x01
     6ba:	9a 81       	ldd	r25, Y+2	; 0x02
     6bc:	ab 81       	ldd	r26, Y+3	; 0x03
     6be:	bc 81       	ldd	r27, Y+4	; 0x04
     6c0:	01 97       	sbiw	r24, 0x01	; 1
     6c2:	a1 09       	sbc	r26, r1
     6c4:	b1 09       	sbc	r27, r1
     6c6:	ec cf       	rjmp	.-40     	; 0x6a0 <__stack+0x1a1>
     6c8:	0e 94 bc 06 	call	0xd78 <aux_rcv_disable>
     6cc:	80 91 98 01 	lds	r24, 0x0198
     6d0:	99 27       	eor	r25, r25
     6d2:	9f 93       	push	r25
     6d4:	8f 93       	push	r24
     6d6:	80 91 bf 01 	lds	r24, 0x01BF
     6da:	99 27       	eor	r25, r25
     6dc:	9f 93       	push	r25
     6de:	8f 93       	push	r24
     6e0:	90 e0       	ldi	r25, 0x00	; 0
     6e2:	a9 2e       	mov	r10, r25
     6e4:	91 e0       	ldi	r25, 0x01	; 1
     6e6:	b9 2e       	mov	r11, r25
     6e8:	bf 92       	push	r11
     6ea:	af 92       	push	r10
     6ec:	1f 93       	push	r17
     6ee:	0f 93       	push	r16
     6f0:	0e 94 44 08 	call	0x1088 <sprintf>
     6f4:	c8 01       	movw	r24, r16
     6f6:	0e 94 68 06 	call	0xcd0 <aux_send_line>
     6fa:	80 ea       	ldi	r24, 0xA0	; 160
     6fc:	96 e8       	ldi	r25, 0x86	; 134
     6fe:	a1 e0       	ldi	r26, 0x01	; 1
     700:	b0 e0       	ldi	r27, 0x00	; 0
     702:	89 83       	std	Y+1, r24	; 0x01
     704:	9a 83       	std	Y+2, r25	; 0x02
     706:	ab 83       	std	Y+3, r26	; 0x03
     708:	bc 83       	std	Y+4, r27	; 0x04
     70a:	8d b7       	in	r24, 0x3d	; 61
     70c:	9e b7       	in	r25, 0x3e	; 62
     70e:	08 96       	adiw	r24, 0x08	; 8
     710:	0f b6       	in	r0, 0x3f	; 63
     712:	f8 94       	cli
     714:	9e bf       	out	0x3e, r25	; 62
     716:	0f be       	out	0x3f, r0	; 63
     718:	8d bf       	out	0x3d, r24	; 61
     71a:	89 81       	ldd	r24, Y+1	; 0x01
     71c:	9a 81       	ldd	r25, Y+2	; 0x02
     71e:	ab 81       	ldd	r26, Y+3	; 0x03
     720:	bc 81       	ldd	r27, Y+4	; 0x04
     722:	00 97       	sbiw	r24, 0x00	; 0
     724:	a1 05       	cpc	r26, r1
     726:	b1 05       	cpc	r27, r1
     728:	61 f0       	breq	.+24     	; 0x742 <__stack+0x243>
     72a:	89 81       	ldd	r24, Y+1	; 0x01
     72c:	9a 81       	ldd	r25, Y+2	; 0x02
     72e:	ab 81       	ldd	r26, Y+3	; 0x03
     730:	bc 81       	ldd	r27, Y+4	; 0x04
     732:	01 97       	sbiw	r24, 0x01	; 1
     734:	a1 09       	sbc	r26, r1
     736:	b1 09       	sbc	r27, r1
     738:	89 83       	std	Y+1, r24	; 0x01
     73a:	9a 83       	std	Y+2, r25	; 0x02
     73c:	ab 83       	std	Y+3, r26	; 0x03
     73e:	bc 83       	std	Y+4, r27	; 0x04
     740:	ec cf       	rjmp	.-40     	; 0x71a <__stack+0x21b>
     742:	33 20       	and	r3, r3
     744:	89 f1       	breq	.+98     	; 0x7a8 <__stack+0x2a9>
     746:	9e a1       	ldd	r25, Y+38	; 0x26
     748:	99 23       	and	r25, r25
     74a:	99 f0       	breq	.+38     	; 0x772 <__stack+0x273>
     74c:	80 91 20 01 	lds	r24, 0x0120
     750:	90 91 21 01 	lds	r25, 0x0121
     754:	90 95       	com	r25
     756:	81 95       	neg	r24
     758:	9f 4f       	sbci	r25, 0xFF	; 255
     75a:	0b 97       	sbiw	r24, 0x0b	; 11
     75c:	2c f0       	brlt	.+10     	; 0x768 <__stack+0x269>
     75e:	1e a2       	std	Y+38, r1	; 0x26
     760:	10 92 21 01 	sts	0x0121, r1
     764:	10 92 20 01 	sts	0x0120, r1
     768:	60 e0       	ldi	r22, 0x00	; 0
     76a:	70 e8       	ldi	r23, 0x80	; 128
     76c:	88 e3       	ldi	r24, 0x38	; 56
     76e:	9f ef       	ldi	r25, 0xFF	; 255
     770:	73 c1       	rjmp	.+742    	; 0xa58 <__stack+0x559>
     772:	99 20       	and	r9, r9
     774:	59 f0       	breq	.+22     	; 0x78c <__stack+0x28d>
     776:	80 91 1e 01 	lds	r24, 0x011E
     77a:	90 91 1f 01 	lds	r25, 0x011F
     77e:	c8 16       	cp	r12, r24
     780:	d9 06       	cpc	r13, r25
     782:	0c f4       	brge	.+2      	; 0x786 <__stack+0x287>
     784:	3e a0       	ldd	r3, Y+38	; 0x26
     786:	61 e0       	ldi	r22, 0x01	; 1
     788:	70 e0       	ldi	r23, 0x00	; 0
     78a:	64 c1       	rjmp	.+712    	; 0xa54 <__stack+0x555>
     78c:	80 91 1e 01 	lds	r24, 0x011E
     790:	90 91 1f 01 	lds	r25, 0x011F
     794:	90 95       	com	r25
     796:	81 95       	neg	r24
     798:	9f 4f       	sbci	r25, 0xFF	; 255
     79a:	c8 16       	cp	r12, r24
     79c:	d9 06       	cpc	r13, r25
     79e:	0c f4       	brge	.+2      	; 0x7a2 <__stack+0x2a3>
     7a0:	39 2c       	mov	r3, r9
     7a2:	6f ef       	ldi	r22, 0xFF	; 255
     7a4:	7f ef       	ldi	r23, 0xFF	; 255
     7a6:	56 c1       	rjmp	.+684    	; 0xa54 <__stack+0x555>
     7a8:	80 91 98 01 	lds	r24, 0x0198
     7ac:	28 2f       	mov	r18, r24
     7ae:	33 27       	eor	r19, r19
     7b0:	23 70       	andi	r18, 0x03	; 3
     7b2:	30 70       	andi	r19, 0x00	; 0
     7b4:	21 15       	cp	r18, r1
     7b6:	31 05       	cpc	r19, r1
     7b8:	89 f4       	brne	.+34     	; 0x7dc <__stack+0x2dd>
     7ba:	80 91 9a 01 	lds	r24, 0x019A
     7be:	88 23       	and	r24, r24
     7c0:	69 f4       	brne	.+26     	; 0x7dc <__stack+0x2dd>
     7c2:	80 91 9b 01 	lds	r24, 0x019B
     7c6:	88 23       	and	r24, r24
     7c8:	49 f4       	brne	.+18     	; 0x7dc <__stack+0x2dd>
     7ca:	80 91 9c 01 	lds	r24, 0x019C
     7ce:	88 23       	and	r24, r24
     7d0:	29 f4       	brne	.+10     	; 0x7dc <__stack+0x2dd>
     7d2:	80 91 9d 01 	lds	r24, 0x019D
     7d6:	88 23       	and	r24, r24
     7d8:	09 f4       	brne	.+2      	; 0x7dc <__stack+0x2dd>
     7da:	fa c0       	rjmp	.+500    	; 0x9d0 <__stack+0x4d1>
     7dc:	60 e0       	ldi	r22, 0x00	; 0
     7de:	70 e8       	ldi	r23, 0x80	; 128
     7e0:	80 e0       	ldi	r24, 0x00	; 0
     7e2:	90 e0       	ldi	r25, 0x00	; 0
     7e4:	0e 94 0c 01 	call	0x218 <drive>
     7e8:	81 e0       	ldi	r24, 0x01	; 1
     7ea:	98 2e       	mov	r9, r24
     7ec:	b0 e5       	ldi	r27, 0x50	; 80
     7ee:	cb 2e       	mov	r12, r27
     7f0:	d1 2c       	mov	r13, r1
     7f2:	ff 20       	and	r15, r15
     7f4:	91 f5       	brne	.+100    	; 0x85a <__stack+0x35b>
     7f6:	80 91 98 01 	lds	r24, 0x0198
     7fa:	99 27       	eor	r25, r25
     7fc:	83 70       	andi	r24, 0x03	; 3
     7fe:	90 70       	andi	r25, 0x00	; 0
     800:	89 2b       	or	r24, r25
     802:	41 f4       	brne	.+16     	; 0x814 <__stack+0x315>
     804:	80 91 9b 01 	lds	r24, 0x019B
     808:	88 23       	and	r24, r24
     80a:	21 f4       	brne	.+8      	; 0x814 <__stack+0x315>
     80c:	80 91 9c 01 	lds	r24, 0x019C
     810:	88 23       	and	r24, r24
     812:	19 f0       	breq	.+6      	; 0x81a <__stack+0x31b>
     814:	a1 e0       	ldi	r26, 0x01	; 1
     816:	5a 2e       	mov	r5, r26
     818:	0a c0       	rjmp	.+20     	; 0x82e <__stack+0x32f>
     81a:	80 91 9a 01 	lds	r24, 0x019A
     81e:	88 23       	and	r24, r24
     820:	11 f0       	breq	.+4      	; 0x826 <__stack+0x327>
     822:	49 2c       	mov	r4, r9
     824:	0b c0       	rjmp	.+22     	; 0x83c <__stack+0x33d>
     826:	80 91 9d 01 	lds	r24, 0x019D
     82a:	81 11       	cpse	r24, r1
     82c:	79 2c       	mov	r7, r9
     82e:	44 20       	and	r4, r4
     830:	29 f4       	brne	.+10     	; 0x83c <__stack+0x33d>
     832:	80 91 9b 01 	lds	r24, 0x019B
     836:	88 23       	and	r24, r24
     838:	09 f4       	brne	.+2      	; 0x83c <__stack+0x33d>
     83a:	b5 c0       	rjmp	.+362    	; 0x9a6 <__stack+0x4a7>
     83c:	77 20       	and	r7, r7
     83e:	31 f4       	brne	.+12     	; 0x84c <__stack+0x34d>
     840:	80 91 9c 01 	lds	r24, 0x019C
     844:	88 23       	and	r24, r24
     846:	11 f4       	brne	.+4      	; 0x84c <__stack+0x34d>
     848:	97 2c       	mov	r9, r7
     84a:	a1 c0       	rjmp	.+322    	; 0x98e <__stack+0x48f>
     84c:	88 20       	and	r8, r8
     84e:	09 f0       	breq	.+2      	; 0x852 <__stack+0x353>
     850:	9e c1       	rjmp	.+828    	; 0xb8e <__stack+0x68f>
     852:	fa ea       	ldi	r31, 0xAA	; 170
     854:	cf 2e       	mov	r12, r31
     856:	d1 2c       	mov	r13, r1
     858:	6e c0       	rjmp	.+220    	; 0x936 <__stack+0x437>
     85a:	a2 e0       	ldi	r26, 0x02	; 2
     85c:	fa 16       	cp	r15, r26
     85e:	b1 f5       	brne	.+108    	; 0x8cc <__stack+0x3cd>
     860:	80 91 98 01 	lds	r24, 0x0198
     864:	99 27       	eor	r25, r25
     866:	83 70       	andi	r24, 0x03	; 3
     868:	90 70       	andi	r25, 0x00	; 0
     86a:	89 2b       	or	r24, r25
     86c:	41 f4       	brne	.+16     	; 0x87e <__stack+0x37f>
     86e:	80 91 9b 01 	lds	r24, 0x019B
     872:	88 23       	and	r24, r24
     874:	21 f4       	brne	.+8      	; 0x87e <__stack+0x37f>
     876:	80 91 9c 01 	lds	r24, 0x019C
     87a:	88 23       	and	r24, r24
     87c:	19 f0       	breq	.+6      	; 0x884 <__stack+0x385>
     87e:	e1 e0       	ldi	r30, 0x01	; 1
     880:	4e 2e       	mov	r4, r30
     882:	0c c0       	rjmp	.+24     	; 0x89c <__stack+0x39d>
     884:	80 91 9a 01 	lds	r24, 0x019A
     888:	88 23       	and	r24, r24
     88a:	11 f0       	breq	.+4      	; 0x890 <__stack+0x391>
     88c:	89 2c       	mov	r8, r9
     88e:	06 c0       	rjmp	.+12     	; 0x89c <__stack+0x39d>
     890:	80 91 9d 01 	lds	r24, 0x019D
     894:	88 23       	and	r24, r24
     896:	11 f0       	breq	.+4      	; 0x89c <__stack+0x39d>
     898:	59 2c       	mov	r5, r9
     89a:	09 c0       	rjmp	.+18     	; 0x8ae <__stack+0x3af>
     89c:	55 20       	and	r5, r5
     89e:	39 f4       	brne	.+14     	; 0x8ae <__stack+0x3af>
     8a0:	80 91 9c 01 	lds	r24, 0x019C
     8a4:	88 23       	and	r24, r24
     8a6:	19 f4       	brne	.+6      	; 0x8ae <__stack+0x3af>
     8a8:	f5 2c       	mov	r15, r5
     8aa:	95 2c       	mov	r9, r5
     8ac:	7e c0       	rjmp	.+252    	; 0x9aa <__stack+0x4ab>
     8ae:	77 20       	and	r7, r7
     8b0:	21 f4       	brne	.+8      	; 0x8ba <__stack+0x3bb>
     8b2:	7a ea       	ldi	r23, 0xAA	; 170
     8b4:	c7 2e       	mov	r12, r23
     8b6:	d1 2c       	mov	r13, r1
     8b8:	6a c0       	rjmp	.+212    	; 0x98e <__stack+0x48f>
     8ba:	88 20       	and	r8, r8
     8bc:	09 f0       	breq	.+2      	; 0x8c0 <__stack+0x3c1>
     8be:	67 c1       	rjmp	.+718    	; 0xb8e <__stack+0x68f>
     8c0:	80 91 9b 01 	lds	r24, 0x019B
     8c4:	88 23       	and	r24, r24
     8c6:	09 f0       	breq	.+2      	; 0x8ca <__stack+0x3cb>
     8c8:	62 c1       	rjmp	.+708    	; 0xb8e <__stack+0x68f>
     8ca:	35 c0       	rjmp	.+106    	; 0x936 <__stack+0x437>
     8cc:	b3 e0       	ldi	r27, 0x03	; 3
     8ce:	fb 16       	cp	r15, r27
     8d0:	a9 f5       	brne	.+106    	; 0x93c <__stack+0x43d>
     8d2:	79 2c       	mov	r7, r9
     8d4:	80 91 98 01 	lds	r24, 0x0198
     8d8:	99 27       	eor	r25, r25
     8da:	83 70       	andi	r24, 0x03	; 3
     8dc:	90 70       	andi	r25, 0x00	; 0
     8de:	89 2b       	or	r24, r25
     8e0:	41 f4       	brne	.+16     	; 0x8f2 <__stack+0x3f3>
     8e2:	80 91 9b 01 	lds	r24, 0x019B
     8e6:	88 23       	and	r24, r24
     8e8:	21 f4       	brne	.+8      	; 0x8f2 <__stack+0x3f3>
     8ea:	80 91 9c 01 	lds	r24, 0x019C
     8ee:	88 23       	and	r24, r24
     8f0:	19 f0       	breq	.+6      	; 0x8f8 <__stack+0x3f9>
     8f2:	61 e0       	ldi	r22, 0x01	; 1
     8f4:	76 2e       	mov	r7, r22
     8f6:	0a c0       	rjmp	.+20     	; 0x90c <__stack+0x40d>
     8f8:	80 91 9a 01 	lds	r24, 0x019A
     8fc:	88 23       	and	r24, r24
     8fe:	11 f0       	breq	.+4      	; 0x904 <__stack+0x405>
     900:	59 2c       	mov	r5, r9
     902:	0a c0       	rjmp	.+20     	; 0x918 <__stack+0x419>
     904:	80 91 9d 01 	lds	r24, 0x019D
     908:	81 11       	cpse	r24, r1
     90a:	89 2c       	mov	r8, r9
     90c:	55 20       	and	r5, r5
     90e:	21 f4       	brne	.+8      	; 0x918 <__stack+0x419>
     910:	80 91 9b 01 	lds	r24, 0x019B
     914:	88 23       	and	r24, r24
     916:	99 f1       	breq	.+102    	; 0x97e <__stack+0x47f>
     918:	44 20       	and	r4, r4
     91a:	21 f4       	brne	.+8      	; 0x924 <__stack+0x425>
     91c:	5a ea       	ldi	r21, 0xAA	; 170
     91e:	c5 2e       	mov	r12, r21
     920:	d1 2c       	mov	r13, r1
     922:	41 c0       	rjmp	.+130    	; 0x9a6 <__stack+0x4a7>
     924:	88 20       	and	r8, r8
     926:	09 f0       	breq	.+2      	; 0x92a <__stack+0x42b>
     928:	32 c1       	rjmp	.+612    	; 0xb8e <__stack+0x68f>
     92a:	80 91 9c 01 	lds	r24, 0x019C
     92e:	88 23       	and	r24, r24
     930:	09 f0       	breq	.+2      	; 0x934 <__stack+0x435>
     932:	2d c1       	rjmp	.+602    	; 0xb8e <__stack+0x68f>
     934:	98 2c       	mov	r9, r8
     936:	41 e0       	ldi	r20, 0x01	; 1
     938:	f4 2e       	mov	r15, r20
     93a:	37 c0       	rjmp	.+110    	; 0x9aa <__stack+0x4ab>
     93c:	80 91 98 01 	lds	r24, 0x0198
     940:	99 27       	eor	r25, r25
     942:	83 70       	andi	r24, 0x03	; 3
     944:	90 70       	andi	r25, 0x00	; 0
     946:	89 2b       	or	r24, r25
     948:	41 f4       	brne	.+16     	; 0x95a <__stack+0x45b>
     94a:	80 91 9b 01 	lds	r24, 0x019B
     94e:	88 23       	and	r24, r24
     950:	21 f4       	brne	.+8      	; 0x95a <__stack+0x45b>
     952:	80 91 9c 01 	lds	r24, 0x019C
     956:	88 23       	and	r24, r24
     958:	19 f0       	breq	.+6      	; 0x960 <__stack+0x461>
     95a:	31 e0       	ldi	r19, 0x01	; 1
     95c:	83 2e       	mov	r8, r19
     95e:	0a c0       	rjmp	.+20     	; 0x974 <__stack+0x475>
     960:	80 91 9a 01 	lds	r24, 0x019A
     964:	88 23       	and	r24, r24
     966:	11 f0       	breq	.+4      	; 0x96c <__stack+0x46d>
     968:	79 2c       	mov	r7, r9
     96a:	04 c0       	rjmp	.+8      	; 0x974 <__stack+0x475>
     96c:	80 91 9d 01 	lds	r24, 0x019D
     970:	81 11       	cpse	r24, r1
     972:	49 2c       	mov	r4, r9
     974:	55 20       	and	r5, r5
     976:	29 f4       	brne	.+10     	; 0x982 <__stack+0x483>
     978:	2a ea       	ldi	r18, 0xAA	; 170
     97a:	c2 2e       	mov	r12, r18
     97c:	d1 2c       	mov	r13, r1
     97e:	f5 2c       	mov	r15, r5
     980:	14 c0       	rjmp	.+40     	; 0x9aa <__stack+0x4ab>
     982:	77 20       	and	r7, r7
     984:	39 f4       	brne	.+14     	; 0x994 <__stack+0x495>
     986:	80 91 9a 01 	lds	r24, 0x019A
     98a:	88 23       	and	r24, r24
     98c:	19 f4       	brne	.+6      	; 0x994 <__stack+0x495>
     98e:	93 e0       	ldi	r25, 0x03	; 3
     990:	f9 2e       	mov	r15, r25
     992:	0b c0       	rjmp	.+22     	; 0x9aa <__stack+0x4ab>
     994:	44 20       	and	r4, r4
     996:	09 f0       	breq	.+2      	; 0x99a <__stack+0x49b>
     998:	fa c0       	rjmp	.+500    	; 0xb8e <__stack+0x68f>
     99a:	80 91 9d 01 	lds	r24, 0x019D
     99e:	88 23       	and	r24, r24
     9a0:	09 f0       	breq	.+2      	; 0x9a4 <__stack+0x4a5>
     9a2:	f5 c0       	rjmp	.+490    	; 0xb8e <__stack+0x68f>
     9a4:	94 2c       	mov	r9, r4
     9a6:	82 e0       	ldi	r24, 0x02	; 2
     9a8:	f8 2e       	mov	r15, r24
     9aa:	b1 e0       	ldi	r27, 0x01	; 1
     9ac:	3b 2e       	mov	r3, r27
     9ae:	3e a2       	std	Y+38, r3	; 0x26
     9b0:	10 92 21 01 	sts	0x0121, r1
     9b4:	10 92 20 01 	sts	0x0120, r1
     9b8:	10 92 1f 01 	sts	0x011F, r1
     9bc:	10 92 1e 01 	sts	0x011E, r1
     9c0:	22 24       	eor	r2, r2
     9c2:	8d e8       	ldi	r24, 0x8D	; 141
     9c4:	0e 94 79 00 	call	0xf2 <byteTx>
     9c8:	82 e0       	ldi	r24, 0x02	; 2
     9ca:	0e 94 79 00 	call	0xf2 <byteTx>
     9ce:	4f c0       	rjmp	.+158    	; 0xa6e <__stack+0x56f>
     9d0:	c9 01       	movw	r24, r18
     9d2:	22 20       	and	r2, r2
     9d4:	11 f4       	brne	.+4      	; 0x9da <__stack+0x4db>
     9d6:	81 e0       	ldi	r24, 0x01	; 1
     9d8:	90 e0       	ldi	r25, 0x00	; 0
     9da:	80 ff       	sbrs	r24, 0
     9dc:	40 c0       	rjmp	.+128    	; 0xa5e <__stack+0x55f>
     9de:	80 91 20 01 	lds	r24, 0x0120
     9e2:	90 91 21 01 	lds	r25, 0x0121
     9e6:	89 3c       	cpi	r24, 0xC9	; 201
     9e8:	91 05       	cpc	r25, r1
     9ea:	94 f1       	brlt	.+100    	; 0xa50 <__stack+0x551>
     9ec:	30 93 1f 01 	sts	0x011F, r19
     9f0:	20 93 1e 01 	sts	0x011E, r18
     9f4:	30 93 21 01 	sts	0x0121, r19
     9f8:	20 93 20 01 	sts	0x0120, r18
     9fc:	a0 e5       	ldi	r26, 0x50	; 80
     9fe:	ca 2e       	mov	r12, r26
     a00:	d1 2c       	mov	r13, r1
     a02:	82 e0       	ldi	r24, 0x02	; 2
     a04:	f8 16       	cp	r15, r24
     a06:	41 f4       	brne	.+16     	; 0xa18 <__stack+0x519>
     a08:	83 2c       	mov	r8, r3
     a0a:	53 2c       	mov	r5, r3
     a0c:	f3 2c       	mov	r15, r3
     a0e:	93 2c       	mov	r9, r3
     a10:	f1 e0       	ldi	r31, 0x01	; 1
     a12:	3f 2e       	mov	r3, r31
     a14:	23 2c       	mov	r2, r3
     a16:	2b c0       	rjmp	.+86     	; 0xa6e <__stack+0x56f>
     a18:	93 e0       	ldi	r25, 0x03	; 3
     a1a:	f9 16       	cp	r15, r25
     a1c:	41 f4       	brne	.+16     	; 0xa2e <__stack+0x52f>
     a1e:	83 2c       	mov	r8, r3
     a20:	53 2c       	mov	r5, r3
     a22:	e1 e0       	ldi	r30, 0x01	; 1
     a24:	9e 2e       	mov	r9, r30
     a26:	f3 2c       	mov	r15, r3
     a28:	29 2c       	mov	r2, r9
     a2a:	39 2c       	mov	r3, r9
     a2c:	20 c0       	rjmp	.+64     	; 0xa6e <__stack+0x56f>
     a2e:	a1 e0       	ldi	r26, 0x01	; 1
     a30:	fa 16       	cp	r15, r26
     a32:	e9 f4       	brne	.+58     	; 0xa6e <__stack+0x56f>
     a34:	44 20       	and	r4, r4
     a36:	21 f0       	breq	.+8      	; 0xa40 <__stack+0x541>
     a38:	9f 2c       	mov	r9, r15
     a3a:	73 e0       	ldi	r23, 0x03	; 3
     a3c:	f7 2e       	mov	r15, r23
     a3e:	03 c0       	rjmp	.+6      	; 0xa46 <__stack+0x547>
     a40:	93 2c       	mov	r9, r3
     a42:	62 e0       	ldi	r22, 0x02	; 2
     a44:	f6 2e       	mov	r15, r22
     a46:	77 24       	eor	r7, r7
     a48:	47 2c       	mov	r4, r7
     a4a:	51 e0       	ldi	r21, 0x01	; 1
     a4c:	35 2e       	mov	r3, r21
     a4e:	0f c0       	rjmp	.+30     	; 0xa6e <__stack+0x56f>
     a50:	60 e0       	ldi	r22, 0x00	; 0
     a52:	70 e8       	ldi	r23, 0x80	; 128
     a54:	88 ec       	ldi	r24, 0xC8	; 200
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	0e 94 0c 01 	call	0x218 <drive>
     a5c:	08 c0       	rjmp	.+16     	; 0xa6e <__stack+0x56f>
     a5e:	60 e0       	ldi	r22, 0x00	; 0
     a60:	70 e8       	ldi	r23, 0x80	; 128
     a62:	88 ec       	ldi	r24, 0xC8	; 200
     a64:	90 e0       	ldi	r25, 0x00	; 0
     a66:	0e 94 0c 01 	call	0x218 <drive>
     a6a:	43 2c       	mov	r4, r3
     a6c:	73 2c       	mov	r7, r3
     a6e:	63 94       	inc	r6
     a70:	b9 e0       	ldi	r27, 0x09	; 9
     a72:	b6 15       	cp	r27, r6
     a74:	08 f0       	brcs	.+2      	; 0xa78 <__stack+0x579>
     a76:	5b c0       	rjmp	.+182    	; 0xb2e <__stack+0x62f>
     a78:	66 24       	eor	r6, r6
     a7a:	33 20       	and	r3, r3
     a7c:	39 f0       	breq	.+14     	; 0xa8c <__stack+0x58d>
     a7e:	ee 20       	and	r14, r14
     a80:	19 f4       	brne	.+6      	; 0xa88 <__stack+0x589>
     a82:	44 e0       	ldi	r20, 0x04	; 4
     a84:	e4 2e       	mov	r14, r20
     a86:	45 c0       	rjmp	.+138    	; 0xb12 <__stack+0x613>
     a88:	ea 94       	dec	r14
     a8a:	06 c0       	rjmp	.+12     	; 0xa98 <__stack+0x599>
     a8c:	84 e0       	ldi	r24, 0x04	; 4
     a8e:	e8 16       	cp	r14, r24
     a90:	11 f4       	brne	.+4      	; 0xa96 <__stack+0x597>
     a92:	e3 2c       	mov	r14, r3
     a94:	03 c0       	rjmp	.+6      	; 0xa9c <__stack+0x59d>
     a96:	e3 94       	inc	r14
     a98:	ee 20       	and	r14, r14
     a9a:	59 f4       	brne	.+22     	; 0xab2 <__stack+0x5b3>
     a9c:	8b e8       	ldi	r24, 0x8B	; 139
     a9e:	0e 94 79 00 	call	0xf2 <byteTx>
     aa2:	8e 2d       	mov	r24, r14
     aa4:	0e 94 79 00 	call	0xf2 <byteTx>
     aa8:	80 e8       	ldi	r24, 0x80	; 128
     aaa:	0e 94 79 00 	call	0xf2 <byteTx>
     aae:	8f ef       	ldi	r24, 0xFF	; 255
     ab0:	15 c0       	rjmp	.+42     	; 0xadc <__stack+0x5dd>
     ab2:	91 e0       	ldi	r25, 0x01	; 1
     ab4:	e9 16       	cp	r14, r25
     ab6:	29 f4       	brne	.+10     	; 0xac2 <__stack+0x5c3>
     ab8:	8b e8       	ldi	r24, 0x8B	; 139
     aba:	0e 94 79 00 	call	0xf2 <byteTx>
     abe:	82 e0       	ldi	r24, 0x02	; 2
     ac0:	07 c0       	rjmp	.+14     	; 0xad0 <__stack+0x5d1>
     ac2:	a2 e0       	ldi	r26, 0x02	; 2
     ac4:	ea 16       	cp	r14, r26
     ac6:	81 f4       	brne	.+32     	; 0xae8 <__stack+0x5e9>
     ac8:	8b e8       	ldi	r24, 0x8B	; 139
     aca:	0e 94 79 00 	call	0xf2 <byteTx>
     ace:	88 e0       	ldi	r24, 0x08	; 8
     ad0:	0e 94 79 00 	call	0xf2 <byteTx>
     ad4:	80 e0       	ldi	r24, 0x00	; 0
     ad6:	0e 94 79 00 	call	0xf2 <byteTx>
     ada:	80 e0       	ldi	r24, 0x00	; 0
     adc:	0e 94 79 00 	call	0xf2 <byteTx>
     ae0:	8b b1       	in	r24, 0x0b	; 11
     ae2:	80 66       	ori	r24, 0x60	; 96
     ae4:	8b b9       	out	0x0b, r24	; 11
     ae6:	23 c0       	rjmp	.+70     	; 0xb2e <__stack+0x62f>
     ae8:	b3 e0       	ldi	r27, 0x03	; 3
     aea:	eb 16       	cp	r14, r27
     aec:	79 f4       	brne	.+30     	; 0xb0c <__stack+0x60d>
     aee:	8b e8       	ldi	r24, 0x8B	; 139
     af0:	0e 94 79 00 	call	0xf2 <byteTx>
     af4:	80 e0       	ldi	r24, 0x00	; 0
     af6:	0e 94 79 00 	call	0xf2 <byteTx>
     afa:	80 e0       	ldi	r24, 0x00	; 0
     afc:	0e 94 79 00 	call	0xf2 <byteTx>
     b00:	80 e0       	ldi	r24, 0x00	; 0
     b02:	0e 94 79 00 	call	0xf2 <byteTx>
     b06:	5e 98       	cbi	0x0b, 6	; 11
     b08:	5d 9a       	sbi	0x0b, 5	; 11
     b0a:	11 c0       	rjmp	.+34     	; 0xb2e <__stack+0x62f>
     b0c:	84 e0       	ldi	r24, 0x04	; 4
     b0e:	e8 16       	cp	r14, r24
     b10:	71 f4       	brne	.+28     	; 0xb2e <__stack+0x62f>
     b12:	8b e8       	ldi	r24, 0x8B	; 139
     b14:	0e 94 79 00 	call	0xf2 <byteTx>
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 79 00 	call	0xf2 <byteTx>
     b1e:	80 e0       	ldi	r24, 0x00	; 0
     b20:	0e 94 79 00 	call	0xf2 <byteTx>
     b24:	80 e0       	ldi	r24, 0x00	; 0
     b26:	0e 94 79 00 	call	0xf2 <byteTx>
     b2a:	5d 98       	cbi	0x0b, 5	; 11
     b2c:	5e 9a       	sbi	0x0b, 6	; 11
     b2e:	84 e1       	ldi	r24, 0x14	; 20
     b30:	90 e0       	ldi	r25, 0x00	; 0
     b32:	0e 94 2c 01 	call	0x258 <delayAndUpdateSensors>
     b36:	0e 94 bc 06 	call	0xd78 <aux_rcv_disable>
     b3a:	80 91 98 01 	lds	r24, 0x0198
     b3e:	99 27       	eor	r25, r25
     b40:	9f 93       	push	r25
     b42:	8f 93       	push	r24
     b44:	80 91 bf 01 	lds	r24, 0x01BF
     b48:	99 27       	eor	r25, r25
     b4a:	9f 93       	push	r25
     b4c:	8f 93       	push	r24
     b4e:	bf 92       	push	r11
     b50:	af 92       	push	r10
     b52:	1f 93       	push	r17
     b54:	0f 93       	push	r16
     b56:	0e 94 44 08 	call	0x1088 <sprintf>
     b5a:	c8 01       	movw	r24, r16
     b5c:	0e 94 68 06 	call	0xcd0 <aux_send_line>
     b60:	80 ea       	ldi	r24, 0xA0	; 160
     b62:	96 e8       	ldi	r25, 0x86	; 134
     b64:	a1 e0       	ldi	r26, 0x01	; 1
     b66:	b0 e0       	ldi	r27, 0x00	; 0
     b68:	89 83       	std	Y+1, r24	; 0x01
     b6a:	9a 83       	std	Y+2, r25	; 0x02
     b6c:	ab 83       	std	Y+3, r26	; 0x03
     b6e:	bc 83       	std	Y+4, r27	; 0x04
     b70:	ad b7       	in	r26, 0x3d	; 61
     b72:	be b7       	in	r27, 0x3e	; 62
     b74:	18 96       	adiw	r26, 0x08	; 8
     b76:	0f b6       	in	r0, 0x3f	; 63
     b78:	f8 94       	cli
     b7a:	be bf       	out	0x3e, r27	; 62
     b7c:	0f be       	out	0x3f, r0	; 63
     b7e:	ad bf       	out	0x3d, r26	; 61
     b80:	4c 9b       	sbis	0x09, 4	; 9
     b82:	05 c0       	rjmp	.+10     	; 0xb8e <__stack+0x68f>
     b84:	80 91 bf 01 	lds	r24, 0x01BF
     b88:	88 23       	and	r24, r24
     b8a:	09 f4       	brne	.+2      	; 0xb8e <__stack+0x68f>
     b8c:	6d cd       	rjmp	.-1318   	; 0x668 <__stack+0x169>
     b8e:	60 e0       	ldi	r22, 0x00	; 0
     b90:	70 e8       	ldi	r23, 0x80	; 128
     b92:	80 e0       	ldi	r24, 0x00	; 0
     b94:	90 e0       	ldi	r25, 0x00	; 0
     b96:	0e 94 0c 01 	call	0x218 <drive>
     b9a:	84 ef       	ldi	r24, 0xF4	; 244
     b9c:	91 e0       	ldi	r25, 0x01	; 1
     b9e:	0e 94 2c 01 	call	0x258 <delayAndUpdateSensors>
     ba2:	8d e8       	ldi	r24, 0x8D	; 141
     ba4:	0e 94 79 00 	call	0xf2 <byteTx>
     ba8:	83 e0       	ldi	r24, 0x03	; 3
     baa:	0e 94 79 00 	call	0xf2 <byteTx>
     bae:	86 e8       	ldi	r24, 0x86	; 134
     bb0:	99 e0       	ldi	r25, 0x09	; 9
     bb2:	a3 cc       	rjmp	.-1722   	; 0x4fa <main+0x74>

00000bb4 <randomAngle>:
     bb4:	0e 94 30 08 	call	0x1060 <random>
     bb8:	dc 01       	movw	r26, r24
     bba:	cb 01       	movw	r24, r22
     bbc:	90 70       	andi	r25, 0x00	; 0
     bbe:	96 95       	lsr	r25
     bc0:	87 95       	ror	r24
     bc2:	c5 96       	adiw	r24, 0x35	; 53
     bc4:	08 95       	ret

00000bc6 <aux_rcv_enable>:
//          Enable Receiver
//----------------------------------------------------
void aux_rcv_enable(void)
{
  gRcvrEnabled = 1;
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	80 93 19 01 	sts	0x0119, r24
     bcc:	08 95       	ret

00000bce <init_aux_UART>:
     bce:	1f 93       	push	r17
     bd0:	16 2f       	mov	r17, r22
     bd2:	f8 94       	cli
     bd4:	80 93 30 01 	sts	0x0130, r24
     bd8:	10 92 27 01 	sts	0x0127, r1
     bdc:	e0 91 32 01 	lds	r30, 0x0132
     be0:	f0 91 33 01 	lds	r31, 0x0133
     be4:	10 82       	st	Z, r1
     be6:	10 92 28 01 	sts	0x0128, r1
     bea:	81 e0       	ldi	r24, 0x01	; 1
     bec:	80 93 18 01 	sts	0x0118, r24
     bf0:	10 92 29 01 	sts	0x0129, r1
     bf4:	10 92 2a 01 	sts	0x012A, r1
     bf8:	0e 94 e3 05 	call	0xbc6 <aux_rcv_enable>
     bfc:	80 91 30 01 	lds	r24, 0x0130
     c00:	41 e0       	ldi	r20, 0x01	; 1
     c02:	50 e0       	ldi	r21, 0x00	; 0
     c04:	9a 01       	movw	r18, r20
     c06:	02 c0       	rjmp	.+4      	; 0xc0c <init_aux_UART+0x3e>
     c08:	22 0f       	add	r18, r18
     c0a:	33 1f       	adc	r19, r19
     c0c:	8a 95       	dec	r24
     c0e:	e2 f7       	brpl	.-8      	; 0xc08 <init_aux_UART+0x3a>
     c10:	84 b1       	in	r24, 0x04	; 4
     c12:	82 2b       	or	r24, r18
     c14:	84 b9       	out	0x04, r24	; 4
     c16:	80 91 30 01 	lds	r24, 0x0130
     c1a:	9a 01       	movw	r18, r20
     c1c:	02 c0       	rjmp	.+4      	; 0xc22 <init_aux_UART+0x54>
     c1e:	22 0f       	add	r18, r18
     c20:	33 1f       	adc	r19, r19
     c22:	8a 95       	dec	r24
     c24:	e2 f7       	brpl	.-8      	; 0xc1e <init_aux_UART+0x50>
     c26:	85 b1       	in	r24, 0x05	; 5
     c28:	82 2b       	or	r24, r18
     c2a:	85 b9       	out	0x05, r24	; 5
     c2c:	80 91 30 01 	lds	r24, 0x0130
     c30:	9a 01       	movw	r18, r20
     c32:	02 c0       	rjmp	.+4      	; 0xc38 <init_aux_UART+0x6a>
     c34:	22 0f       	add	r18, r18
     c36:	33 1f       	adc	r19, r19
     c38:	8a 95       	dec	r24
     c3a:	e2 f7       	brpl	.-8      	; 0xc34 <init_aux_UART+0x66>
     c3c:	9f e3       	ldi	r25, 0x3F	; 63
     c3e:	92 27       	eor	r25, r18
     c40:	80 91 7e 00 	lds	r24, 0x007E
     c44:	89 23       	and	r24, r25
     c46:	80 93 7e 00 	sts	0x007E, r24
     c4a:	80 91 30 01 	lds	r24, 0x0130
     c4e:	9a 01       	movw	r18, r20
     c50:	02 c0       	rjmp	.+4      	; 0xc56 <init_aux_UART+0x88>
     c52:	22 0f       	add	r18, r18
     c54:	33 1f       	adc	r19, r19
     c56:	8a 95       	dec	r24
     c58:	e2 f7       	brpl	.-8      	; 0xc52 <init_aux_UART+0x84>
     c5a:	92 2f       	mov	r25, r18
     c5c:	90 95       	com	r25
     c5e:	87 b1       	in	r24, 0x07	; 7
     c60:	89 23       	and	r24, r25
     c62:	87 b9       	out	0x07, r24	; 7
     c64:	80 91 30 01 	lds	r24, 0x0130
     c68:	02 c0       	rjmp	.+4      	; 0xc6e <init_aux_UART+0xa0>
     c6a:	44 0f       	add	r20, r20
     c6c:	55 1f       	adc	r21, r21
     c6e:	8a 95       	dec	r24
     c70:	e2 f7       	brpl	.-8      	; 0xc6a <init_aux_UART+0x9c>
     c72:	88 b1       	in	r24, 0x08	; 8
     c74:	84 2b       	or	r24, r20
     c76:	88 b9       	out	0x08, r24	; 8
     c78:	92 e0       	ldi	r25, 0x02	; 2
     c7a:	90 93 b0 00 	sts	0x00B0, r25
     c7e:	10 93 b3 00 	sts	0x00B3, r17
     c82:	11 50       	subi	r17, 0x01	; 1
     c84:	10 93 b2 00 	sts	0x00B2, r17
     c88:	83 e0       	ldi	r24, 0x03	; 3
     c8a:	80 93 b1 00 	sts	0x00B1, r24
     c8e:	90 93 70 00 	sts	0x0070, r25
     c92:	78 94       	sei
     c94:	1f 91       	pop	r17
     c96:	08 95       	ret

00000c98 <aux_UART_busy>:
     c98:	20 e0       	ldi	r18, 0x00	; 0
     c9a:	30 e0       	ldi	r19, 0x00	; 0
     c9c:	80 91 28 01 	lds	r24, 0x0128
     ca0:	88 23       	and	r24, r24
     ca2:	11 f0       	breq	.+4      	; 0xca8 <aux_UART_busy+0x10>
     ca4:	21 e0       	ldi	r18, 0x01	; 1
     ca6:	30 e0       	ldi	r19, 0x00	; 0
     ca8:	c9 01       	movw	r24, r18
     caa:	08 95       	ret

00000cac <ByteXmtAux>:
     cac:	cf 93       	push	r28
     cae:	c8 2f       	mov	r28, r24
     cb0:	78 94       	sei
     cb2:	01 c0       	rjmp	.+2      	; 0xcb6 <ByteXmtAux+0xa>
     cb4:	00 00       	nop
     cb6:	0e 94 4c 06 	call	0xc98 <aux_UART_busy>
     cba:	88 23       	and	r24, r24
     cbc:	d9 f7       	brne	.-10     	; 0xcb4 <ByteXmtAux+0x8>
     cbe:	f8 94       	cli
     cc0:	c0 93 31 01 	sts	0x0131, r28
     cc4:	81 e0       	ldi	r24, 0x01	; 1
     cc6:	80 93 28 01 	sts	0x0128, r24
     cca:	78 94       	sei
     ccc:	cf 91       	pop	r28
     cce:	08 95       	ret

00000cd0 <aux_send_line>:
     cd0:	1f 93       	push	r17
     cd2:	cf 93       	push	r28
     cd4:	df 93       	push	r29
     cd6:	ec 01       	movw	r28, r24
     cd8:	10 e0       	ldi	r17, 0x00	; 0
     cda:	78 94       	sei
     cdc:	01 c0       	rjmp	.+2      	; 0xce0 <aux_send_line+0x10>
     cde:	00 00       	nop
     ce0:	0e 94 4c 06 	call	0xc98 <aux_UART_busy>
     ce4:	88 23       	and	r24, r24
     ce6:	d9 f7       	brne	.-10     	; 0xcde <aux_send_line+0xe>
     ce8:	9e 01       	movw	r18, r28
     cea:	2f 5f       	subi	r18, 0xFF	; 255
     cec:	3f 4f       	sbci	r19, 0xFF	; 255
     cee:	30 93 33 01 	sts	0x0133, r19
     cf2:	20 93 32 01 	sts	0x0132, r18
     cf6:	89 81       	ldd	r24, Y+1	; 0x01
     cf8:	88 23       	and	r24, r24
     cfa:	31 f0       	breq	.+12     	; 0xd08 <aux_send_line+0x38>
     cfc:	1f 5f       	subi	r17, 0xFF	; 255
     cfe:	f9 01       	movw	r30, r18
     d00:	e1 0f       	add	r30, r17
     d02:	f1 1d       	adc	r31, r1
     d04:	80 81       	ld	r24, Z
     d06:	f8 cf       	rjmp	.-16     	; 0xcf8 <aux_send_line+0x28>
     d08:	f8 94       	cli
     d0a:	10 93 27 01 	sts	0x0127, r17
     d0e:	88 81       	ld	r24, Y
     d10:	80 93 31 01 	sts	0x0131, r24
     d14:	81 e0       	ldi	r24, 0x01	; 1
     d16:	80 93 28 01 	sts	0x0128, r24
     d1a:	78 94       	sei
     d1c:	df 91       	pop	r29
     d1e:	cf 91       	pop	r28
     d20:	1f 91       	pop	r17
     d22:	08 95       	ret

00000d24 <aux_char_rdy>:
     d24:	90 91 29 01 	lds	r25, 0x0129
     d28:	80 91 2a 01 	lds	r24, 0x012A
     d2c:	98 17       	cp	r25, r24
     d2e:	38 f0       	brcs	.+14     	; 0xd3e <aux_char_rdy+0x1a>
     d30:	80 91 29 01 	lds	r24, 0x0129
     d34:	90 91 2a 01 	lds	r25, 0x012A
     d38:	89 1b       	sub	r24, r25
     d3a:	99 27       	eor	r25, r25
     d3c:	08 95       	ret
     d3e:	80 91 2a 01 	lds	r24, 0x012A
     d42:	90 91 29 01 	lds	r25, 0x0129
     d46:	89 1b       	sub	r24, r25
     d48:	90 e3       	ldi	r25, 0x30	; 48
     d4a:	98 1b       	sub	r25, r24
     d4c:	89 2f       	mov	r24, r25
     d4e:	99 27       	eor	r25, r25
     d50:	08 95       	ret

00000d52 <aux_read_char>:
     d52:	80 91 2a 01 	lds	r24, 0x012A
     d56:	e8 2f       	mov	r30, r24
     d58:	ff 27       	eor	r31, r31
     d5a:	ec 5c       	subi	r30, 0xCC	; 204
     d5c:	fe 4f       	sbci	r31, 0xFE	; 254
     d5e:	8f 5f       	subi	r24, 0xFF	; 255
     d60:	80 93 2a 01 	sts	0x012A, r24
     d64:	e0 81       	ld	r30, Z
     d66:	80 91 2a 01 	lds	r24, 0x012A
     d6a:	80 33       	cpi	r24, 0x30	; 48
     d6c:	10 f0       	brcs	.+4      	; 0xd72 <aux_read_char+0x20>
     d6e:	10 92 2a 01 	sts	0x012A, r1
     d72:	8e 2f       	mov	r24, r30
     d74:	99 27       	eor	r25, r25
     d76:	08 95       	ret

00000d78 <aux_rcv_disable>:
}
    
//----------------------------------------------------
//          Disable Receiver
//----------------------------------------------------
void aux_rcv_disable(void)
{
  gRcvrEnabled = 0;
     d78:	10 92 19 01 	sts	0x0119, r1
     d7c:	08 95       	ret

00000d7e <__vector_7>:
}
    
//-------------------------------------------------
//    Timer 2 ISR runs at 3X the Baud Rate
// Transmits character in 10-bit UART protocol
//      1 Start, 8 data, No parity, 1 stop.
//-------------------------------------------------
ISR(TIMER2_COMPA_vect)
{  
     d7e:	1f 92       	push	r1
     d80:	0f 92       	push	r0
     d82:	0f b6       	in	r0, 0x3f	; 63
     d84:	0f 92       	push	r0
     d86:	11 24       	eor	r1, r1
     d88:	2f 93       	push	r18
     d8a:	3f 93       	push	r19
     d8c:	8f 93       	push	r24
     d8e:	9f 93       	push	r25
     d90:	ef 93       	push	r30
     d92:	ff 93       	push	r31
  static volatile uint8_t ringNdx = 0;
  static volatile uint8_t irqcnt  = 0;
  static volatile int8_t  rcving  = 0;
  static volatile uint8_t bittime = 0;
  static volatile uint8_t rcvbyte = 0;


  if (++irqcnt >= 3) irqcnt=0; // Faster than modulo 3
     d94:	80 91 2c 01 	lds	r24, 0x012C
     d98:	8f 5f       	subi	r24, 0xFF	; 255
     d9a:	80 93 2c 01 	sts	0x012C, r24
     d9e:	80 91 2c 01 	lds	r24, 0x012C
     da2:	83 30       	cpi	r24, 0x03	; 3
     da4:	10 f0       	brcs	.+4      	; 0xdaa <__vector_7+0x2c>
     da6:	10 92 2c 01 	sts	0x012C, r1
  
  if (gRcvrEnabled) // Has user disabled receiver?
     daa:	80 91 19 01 	lds	r24, 0x0119
     dae:	88 23       	and	r24, r24
     db0:	09 f4       	brne	.+2      	; 0xdb4 <__vector_7+0x36>
     db2:	5f c0       	rjmp	.+190    	; 0xe72 <__vector_7+0xf4>
  {
    if (rcving)
     db4:	30 91 2d 01 	lds	r19, 0x012D
     db8:	33 23       	and	r19, r19
     dba:	d1 f1       	breq	.+116    	; 0xe30 <__vector_7+0xb2>
    {
      if (irqcnt == bittime)
     dbc:	90 91 2c 01 	lds	r25, 0x012C
     dc0:	80 91 2e 01 	lds	r24, 0x012E
     dc4:	98 17       	cp	r25, r24
     dc6:	09 f0       	breq	.+2      	; 0xdca <__vector_7+0x4c>
     dc8:	56 c0       	rjmp	.+172    	; 0xe76 <__vector_7+0xf8>
      {
        rcvbyte >>= 1;
     dca:	80 91 2f 01 	lds	r24, 0x012F
     dce:	86 95       	lsr	r24
     dd0:	80 93 2f 01 	sts	0x012F, r24
        if (PINC & _BV(gAuxPort)) rcvbyte |= 0x80;
     dd4:	86 b1       	in	r24, 0x06	; 6
     dd6:	99 27       	eor	r25, r25
     dd8:	20 91 30 01 	lds	r18, 0x0130
     ddc:	02 c0       	rjmp	.+4      	; 0xde2 <__vector_7+0x64>
     dde:	95 95       	asr	r25
     de0:	87 95       	ror	r24
     de2:	2a 95       	dec	r18
     de4:	e2 f7       	brpl	.-8      	; 0xdde <__vector_7+0x60>
     de6:	80 ff       	sbrs	r24, 0
     de8:	05 c0       	rjmp	.+10     	; 0xdf4 <__vector_7+0x76>
     dea:	80 91 2f 01 	lds	r24, 0x012F
     dee:	80 68       	ori	r24, 0x80	; 128
     df0:	80 93 2f 01 	sts	0x012F, r24
        rcving++;
     df4:	80 91 2d 01 	lds	r24, 0x012D
     df8:	8f 5f       	subi	r24, 0xFF	; 255
     dfa:	80 93 2d 01 	sts	0x012D, r24
      
        if (rcving >= 10) // Discard the start-bit
     dfe:	80 91 2d 01 	lds	r24, 0x012D
     e02:	8a 30       	cpi	r24, 0x0A	; 10
     e04:	c4 f1       	brlt	.+112    	; 0xe76 <__vector_7+0xf8>
        {
          rcving = 0;
     e06:	10 92 2d 01 	sts	0x012D, r1
          gRring[gRhead++] = rcvbyte;
     e0a:	90 91 29 01 	lds	r25, 0x0129
     e0e:	e9 2f       	mov	r30, r25
     e10:	ff 27       	eor	r31, r31
     e12:	ec 5c       	subi	r30, 0xCC	; 204
     e14:	fe 4f       	sbci	r31, 0xFE	; 254
     e16:	80 91 2f 01 	lds	r24, 0x012F
     e1a:	80 83       	st	Z, r24
     e1c:	9f 5f       	subi	r25, 0xFF	; 255
     e1e:	90 93 29 01 	sts	0x0129, r25
          if (gRhead >= MAX_AUX_BUF) gRhead = 0;
     e22:	80 91 29 01 	lds	r24, 0x0129
     e26:	80 33       	cpi	r24, 0x30	; 48
     e28:	30 f1       	brcs	.+76     	; 0xe76 <__vector_7+0xf8>
     e2a:	10 92 29 01 	sts	0x0129, r1
     e2e:	23 c0       	rjmp	.+70     	; 0xe76 <__vector_7+0xf8>
        }
      }
    }
    else if ((PINC & _BV(gAuxPort)) == 0) // Start bit?
     e30:	86 b1       	in	r24, 0x06	; 6
     e32:	99 27       	eor	r25, r25
     e34:	20 91 30 01 	lds	r18, 0x0130
     e38:	02 c0       	rjmp	.+4      	; 0xe3e <__vector_7+0xc0>
     e3a:	95 95       	asr	r25
     e3c:	87 95       	ror	r24
     e3e:	2a 95       	dec	r18
     e40:	e2 f7       	brpl	.-8      	; 0xe3a <__vector_7+0xbc>
     e42:	80 fd       	sbrc	r24, 0
     e44:	18 c0       	rjmp	.+48     	; 0xe76 <__vector_7+0xf8>
    {
      bittime = irqcnt+1;  // When to sample subsequent bits
     e46:	80 91 2c 01 	lds	r24, 0x012C
     e4a:	8f 5f       	subi	r24, 0xFF	; 255
     e4c:	80 93 2e 01 	sts	0x012E, r24
      if (++bittime >= 3) bittime=0; // Faster than modulo 3
     e50:	80 91 2e 01 	lds	r24, 0x012E
     e54:	8f 5f       	subi	r24, 0xFF	; 255
     e56:	80 93 2e 01 	sts	0x012E, r24
     e5a:	80 91 2e 01 	lds	r24, 0x012E
     e5e:	83 30       	cpi	r24, 0x03	; 3
     e60:	10 f0       	brcs	.+4      	; 0xe66 <__vector_7+0xe8>
     e62:	30 93 2e 01 	sts	0x012E, r19
      rcving  = 1;         // Boolean and bit count
     e66:	81 e0       	ldi	r24, 0x01	; 1
     e68:	80 93 2d 01 	sts	0x012D, r24
      rcvbyte = 0;         // Reset received byte
     e6c:	30 93 2f 01 	sts	0x012F, r19
     e70:	02 c0       	rjmp	.+4      	; 0xe76 <__vector_7+0xf8>
    }
  }
  else // Keep receiver state var reset while disabled.
  {
    rcving  = 0;
     e72:	80 93 2d 01 	sts	0x012D, r24
  }
  
  if (irqcnt==0)  // Only process transmit at Baud rate.
     e76:	80 91 2c 01 	lds	r24, 0x012C
     e7a:	88 23       	and	r24, r24
     e7c:	09 f0       	breq	.+2      	; 0xe80 <__vector_7+0x102>
     e7e:	7d c0       	rjmp	.+250    	; 0xf7a <__vector_7+0x1fc>
  {
    switch (gXmtState)
     e80:	80 91 28 01 	lds	r24, 0x0128
     e84:	28 2f       	mov	r18, r24
     e86:	33 27       	eor	r19, r19
     e88:	22 30       	cpi	r18, 0x02	; 2
     e8a:	31 05       	cpc	r19, r1
     e8c:	e9 f0       	breq	.+58     	; 0xec8 <__vector_7+0x14a>
     e8e:	23 30       	cpi	r18, 0x03	; 3
     e90:	31 05       	cpc	r19, r1
     e92:	24 f4       	brge	.+8      	; 0xe9c <__vector_7+0x11e>
     e94:	21 30       	cpi	r18, 0x01	; 1
     e96:	31 05       	cpc	r19, r1
     e98:	31 f0       	breq	.+12     	; 0xea6 <__vector_7+0x128>
     e9a:	6f c0       	rjmp	.+222    	; 0xf7a <__vector_7+0x1fc>
     e9c:	23 30       	cpi	r18, 0x03	; 3
     e9e:	31 05       	cpc	r19, r1
     ea0:	09 f4       	brne	.+2      	; 0xea4 <__vector_7+0x126>
     ea2:	3e c0       	rjmp	.+124    	; 0xf20 <__vector_7+0x1a2>
     ea4:	6a c0       	rjmp	.+212    	; 0xf7a <__vector_7+0x1fc>
    {
      case SEND_START:    // Send single low start bit (Space)
         PORTB &= ~_BV(gAuxPort);
     ea6:	80 91 30 01 	lds	r24, 0x0130
     eaa:	02 c0       	rjmp	.+4      	; 0xeb0 <__vector_7+0x132>
     eac:	22 0f       	add	r18, r18
     eae:	33 1f       	adc	r19, r19
     eb0:	8a 95       	dec	r24
     eb2:	e2 f7       	brpl	.-8      	; 0xeac <__vector_7+0x12e>
     eb4:	92 2f       	mov	r25, r18
     eb6:	90 95       	com	r25
     eb8:	85 b1       	in	r24, 0x05	; 5
     eba:	89 23       	and	r24, r25
     ebc:	85 b9       	out	0x05, r24	; 5
         gXmtState = SEND_DATA;
     ebe:	82 e0       	ldi	r24, 0x02	; 2
     ec0:	80 93 28 01 	sts	0x0128, r24
         gBitnum = 0x01;  // Data will be LSB first.
     ec4:	81 e0       	ldi	r24, 0x01	; 1
     ec6:	29 c0       	rjmp	.+82     	; 0xf1a <__vector_7+0x19c>
         break;

      case SEND_DATA:
         if (gUartXmt & gBitnum) // Send a 1 or a 0?
     ec8:	80 91 31 01 	lds	r24, 0x0131
     ecc:	90 91 18 01 	lds	r25, 0x0118
     ed0:	89 23       	and	r24, r25
     ed2:	61 f0       	breq	.+24     	; 0xeec <__vector_7+0x16e>
           PORTB |= _BV(gAuxPort);
     ed4:	80 91 30 01 	lds	r24, 0x0130
     ed8:	21 e0       	ldi	r18, 0x01	; 1
     eda:	30 e0       	ldi	r19, 0x00	; 0
     edc:	02 c0       	rjmp	.+4      	; 0xee2 <__vector_7+0x164>
     ede:	22 0f       	add	r18, r18
     ee0:	33 1f       	adc	r19, r19
     ee2:	8a 95       	dec	r24
     ee4:	e2 f7       	brpl	.-8      	; 0xede <__vector_7+0x160>
     ee6:	85 b1       	in	r24, 0x05	; 5
     ee8:	82 2b       	or	r24, r18
     eea:	0d c0       	rjmp	.+26     	; 0xf06 <__vector_7+0x188>
         else
           PORTB &= ~_BV(gAuxPort);
     eec:	20 91 30 01 	lds	r18, 0x0130
     ef0:	81 e0       	ldi	r24, 0x01	; 1
     ef2:	90 e0       	ldi	r25, 0x00	; 0
     ef4:	02 c0       	rjmp	.+4      	; 0xefa <__vector_7+0x17c>
     ef6:	88 0f       	add	r24, r24
     ef8:	99 1f       	adc	r25, r25
     efa:	2a 95       	dec	r18
     efc:	e2 f7       	brpl	.-8      	; 0xef6 <__vector_7+0x178>
     efe:	98 2f       	mov	r25, r24
     f00:	90 95       	com	r25
     f02:	85 b1       	in	r24, 0x05	; 5
     f04:	89 23       	and	r24, r25
     f06:	85 b9       	out	0x05, r24	; 5

         if (gBitnum & 0x80) // If the MSB was sent, next is Stop bit.
     f08:	80 91 18 01 	lds	r24, 0x0118
     f0c:	87 ff       	sbrs	r24, 7
     f0e:	02 c0       	rjmp	.+4      	; 0xf14 <__vector_7+0x196>
           gXmtState = SEND_STOP;
     f10:	83 e0       	ldi	r24, 0x03	; 3
     f12:	31 c0       	rjmp	.+98     	; 0xf76 <__vector_7+0x1f8>
         else
           gBitnum <<= 1; // Otherwise, send next bit at next bit time.
     f14:	80 91 18 01 	lds	r24, 0x0118
     f18:	88 0f       	add	r24, r24
     f1a:	80 93 18 01 	sts	0x0118, r24
         break;
     f1e:	2d c0       	rjmp	.+90     	; 0xf7a <__vector_7+0x1fc>

      case SEND_STOP: // Stop bit : "Marking" state for 1 bit time.
         PORTB |= _BV(gAuxPort);
     f20:	80 91 30 01 	lds	r24, 0x0130
     f24:	21 e0       	ldi	r18, 0x01	; 1
     f26:	30 e0       	ldi	r19, 0x00	; 0
     f28:	02 c0       	rjmp	.+4      	; 0xf2e <__vector_7+0x1b0>
     f2a:	22 0f       	add	r18, r18
     f2c:	33 1f       	adc	r19, r19
     f2e:	8a 95       	dec	r24
     f30:	e2 f7       	brpl	.-8      	; 0xf2a <__vector_7+0x1ac>
     f32:	85 b1       	in	r24, 0x05	; 5
     f34:	82 2b       	or	r24, r18
     f36:	85 b9       	out	0x05, r24	; 5
         gBitnum = 0x01;
     f38:	91 e0       	ldi	r25, 0x01	; 1
     f3a:	90 93 18 01 	sts	0x0118, r25
         if (gXringNdx)  // See if a char array has been queued.
     f3e:	80 91 27 01 	lds	r24, 0x0127
     f42:	88 23       	and	r24, r24
     f44:	b1 f0       	breq	.+44     	; 0xf72 <__vector_7+0x1f4>
         {
           gUartXmt  = gXring[ringNdx++]; // Set data byte to be sent.
     f46:	80 91 2b 01 	lds	r24, 0x012B
     f4a:	e0 91 32 01 	lds	r30, 0x0132
     f4e:	f0 91 33 01 	lds	r31, 0x0133
     f52:	e8 0f       	add	r30, r24
     f54:	f1 1d       	adc	r31, r1
     f56:	89 0f       	add	r24, r25
     f58:	80 93 2b 01 	sts	0x012B, r24
     f5c:	80 81       	ld	r24, Z
     f5e:	80 93 31 01 	sts	0x0131, r24
           gXmtState = SEND_START;        // Activate transmitter state machine.
     f62:	90 93 28 01 	sts	0x0128, r25
           gXringNdx--;                   // Decrement char count.
     f66:	80 91 27 01 	lds	r24, 0x0127
     f6a:	81 50       	subi	r24, 0x01	; 1
     f6c:	80 93 27 01 	sts	0x0127, r24
     f70:	04 c0       	rjmp	.+8      	; 0xf7a <__vector_7+0x1fc>
         }
         else // All done. Clean up and disable timer2 interrupts.
         {
           ringNdx = 0;
     f72:	80 93 2b 01 	sts	0x012B, r24
           gXmtState = SEND_DONE;
     f76:	80 93 28 01 	sts	0x0128, r24
     f7a:	ff 91       	pop	r31
     f7c:	ef 91       	pop	r30
     f7e:	9f 91       	pop	r25
     f80:	8f 91       	pop	r24
     f82:	3f 91       	pop	r19
     f84:	2f 91       	pop	r18
     f86:	0f 90       	pop	r0
     f88:	0f be       	out	0x3f, r0	; 63
     f8a:	0f 90       	pop	r0
     f8c:	1f 90       	pop	r1
     f8e:	18 95       	reti

00000f90 <do_random>:
     f90:	af 92       	push	r10
     f92:	bf 92       	push	r11
     f94:	cf 92       	push	r12
     f96:	df 92       	push	r13
     f98:	ef 92       	push	r14
     f9a:	ff 92       	push	r15
     f9c:	0f 93       	push	r16
     f9e:	1f 93       	push	r17
     fa0:	cf 93       	push	r28
     fa2:	df 93       	push	r29
     fa4:	ec 01       	movw	r28, r24
     fa6:	e8 80       	ld	r14, Y
     fa8:	f9 80       	ldd	r15, Y+1	; 0x01
     faa:	0a 81       	ldd	r16, Y+2	; 0x02
     fac:	1b 81       	ldd	r17, Y+3	; 0x03
     fae:	c8 01       	movw	r24, r16
     fb0:	b7 01       	movw	r22, r14
     fb2:	2d e1       	ldi	r18, 0x1D	; 29
     fb4:	33 ef       	ldi	r19, 0xF3	; 243
     fb6:	41 e0       	ldi	r20, 0x01	; 1
     fb8:	50 e0       	ldi	r21, 0x00	; 0
     fba:	0e 94 9c 0b 	call	0x1738 <__udivmodsi4>
     fbe:	59 01       	movw	r10, r18
     fc0:	6a 01       	movw	r12, r20
     fc2:	c8 01       	movw	r24, r16
     fc4:	b7 01       	movw	r22, r14
     fc6:	2d e1       	ldi	r18, 0x1D	; 29
     fc8:	33 ef       	ldi	r19, 0xF3	; 243
     fca:	41 e0       	ldi	r20, 0x01	; 1
     fcc:	50 e0       	ldi	r21, 0x00	; 0
     fce:	0e 94 9c 0b 	call	0x1738 <__udivmodsi4>
     fd2:	dc 01       	movw	r26, r24
     fd4:	cb 01       	movw	r24, r22
     fd6:	bc 01       	movw	r22, r24
     fd8:	cd 01       	movw	r24, r26
     fda:	27 ea       	ldi	r18, 0xA7	; 167
     fdc:	31 e4       	ldi	r19, 0x41	; 65
     fde:	40 e0       	ldi	r20, 0x00	; 0
     fe0:	50 e0       	ldi	r21, 0x00	; 0
     fe2:	0e 94 7d 0b 	call	0x16fa <__mulsi3>
     fe6:	7b 01       	movw	r14, r22
     fe8:	8c 01       	movw	r16, r24
     fea:	c6 01       	movw	r24, r12
     fec:	b5 01       	movw	r22, r10
     fee:	24 e1       	ldi	r18, 0x14	; 20
     ff0:	3b e0       	ldi	r19, 0x0B	; 11
     ff2:	40 e0       	ldi	r20, 0x00	; 0
     ff4:	50 e0       	ldi	r21, 0x00	; 0
     ff6:	0e 94 7d 0b 	call	0x16fa <__mulsi3>
     ffa:	dc 01       	movw	r26, r24
     ffc:	cb 01       	movw	r24, r22
     ffe:	e8 1a       	sub	r14, r24
    1000:	f9 0a       	sbc	r15, r25
    1002:	0a 0b       	sbc	r16, r26
    1004:	1b 0b       	sbc	r17, r27
    1006:	1e 14       	cp	r1, r14
    1008:	1f 04       	cpc	r1, r15
    100a:	10 06       	cpc	r1, r16
    100c:	11 06       	cpc	r1, r17
    100e:	44 f0       	brlt	.+16     	; 0x1020 <do_random+0x90>
    1010:	8f ef       	ldi	r24, 0xFF	; 255
    1012:	9f ef       	ldi	r25, 0xFF	; 255
    1014:	af ef       	ldi	r26, 0xFF	; 255
    1016:	bf e7       	ldi	r27, 0x7F	; 127
    1018:	e8 0e       	add	r14, r24
    101a:	f9 1e       	adc	r15, r25
    101c:	0a 1f       	adc	r16, r26
    101e:	1b 1f       	adc	r17, r27
    1020:	e8 82       	st	Y, r14
    1022:	f9 82       	std	Y+1, r15	; 0x01
    1024:	0a 83       	std	Y+2, r16	; 0x02
    1026:	1b 83       	std	Y+3, r17	; 0x03
    1028:	8f ef       	ldi	r24, 0xFF	; 255
    102a:	9f ef       	ldi	r25, 0xFF	; 255
    102c:	af ef       	ldi	r26, 0xFF	; 255
    102e:	bf e7       	ldi	r27, 0x7F	; 127
    1030:	e8 22       	and	r14, r24
    1032:	f9 22       	and	r15, r25
    1034:	0a 23       	and	r16, r26
    1036:	1b 23       	and	r17, r27
    1038:	c8 01       	movw	r24, r16
    103a:	b7 01       	movw	r22, r14
    103c:	df 91       	pop	r29
    103e:	cf 91       	pop	r28
    1040:	1f 91       	pop	r17
    1042:	0f 91       	pop	r16
    1044:	ff 90       	pop	r15
    1046:	ef 90       	pop	r14
    1048:	df 90       	pop	r13
    104a:	cf 90       	pop	r12
    104c:	bf 90       	pop	r11
    104e:	af 90       	pop	r10
    1050:	08 95       	ret

00001052 <random_r>:
    1052:	0e 94 c8 07 	call	0xf90 <do_random>
    1056:	dc 01       	movw	r26, r24
    1058:	cb 01       	movw	r24, r22
    105a:	bc 01       	movw	r22, r24
    105c:	cd 01       	movw	r24, r26
    105e:	08 95       	ret

00001060 <random>:
    1060:	8a e1       	ldi	r24, 0x1A	; 26
    1062:	91 e0       	ldi	r25, 0x01	; 1
    1064:	0e 94 c8 07 	call	0xf90 <do_random>
    1068:	dc 01       	movw	r26, r24
    106a:	cb 01       	movw	r24, r22
    106c:	bc 01       	movw	r22, r24
    106e:	cd 01       	movw	r24, r26
    1070:	08 95       	ret

00001072 <srandom>:
    1072:	dc 01       	movw	r26, r24
    1074:	cb 01       	movw	r24, r22
    1076:	80 93 1a 01 	sts	0x011A, r24
    107a:	90 93 1b 01 	sts	0x011B, r25
    107e:	a0 93 1c 01 	sts	0x011C, r26
    1082:	b0 93 1d 01 	sts	0x011D, r27
    1086:	08 95       	ret

00001088 <sprintf>:
    1088:	0f 93       	push	r16
    108a:	1f 93       	push	r17
    108c:	cf 93       	push	r28
    108e:	df 93       	push	r29
    1090:	cd b7       	in	r28, 0x3d	; 61
    1092:	de b7       	in	r29, 0x3e	; 62
    1094:	2e 97       	sbiw	r28, 0x0e	; 14
    1096:	0f b6       	in	r0, 0x3f	; 63
    1098:	f8 94       	cli
    109a:	de bf       	out	0x3e, r29	; 62
    109c:	0f be       	out	0x3f, r0	; 63
    109e:	cd bf       	out	0x3d, r28	; 61
    10a0:	0d 89       	ldd	r16, Y+21	; 0x15
    10a2:	1e 89       	ldd	r17, Y+22	; 0x16
    10a4:	2f 89       	ldd	r18, Y+23	; 0x17
    10a6:	38 8d       	ldd	r19, Y+24	; 0x18
    10a8:	86 e0       	ldi	r24, 0x06	; 6
    10aa:	8c 83       	std	Y+4, r24	; 0x04
    10ac:	1a 83       	std	Y+2, r17	; 0x02
    10ae:	09 83       	std	Y+1, r16	; 0x01
    10b0:	8f ef       	ldi	r24, 0xFF	; 255
    10b2:	9f e7       	ldi	r25, 0x7F	; 127
    10b4:	9e 83       	std	Y+6, r25	; 0x06
    10b6:	8d 83       	std	Y+5, r24	; 0x05
    10b8:	ae 01       	movw	r20, r28
    10ba:	47 5e       	subi	r20, 0xE7	; 231
    10bc:	5f 4f       	sbci	r21, 0xFF	; 255
    10be:	b9 01       	movw	r22, r18
    10c0:	ce 01       	movw	r24, r28
    10c2:	01 96       	adiw	r24, 0x01	; 1
    10c4:	0e 94 74 08 	call	0x10e8 <vfprintf>
    10c8:	ef 81       	ldd	r30, Y+7	; 0x07
    10ca:	f8 85       	ldd	r31, Y+8	; 0x08
    10cc:	e0 0f       	add	r30, r16
    10ce:	f1 1f       	adc	r31, r17
    10d0:	10 82       	st	Z, r1
    10d2:	2e 96       	adiw	r28, 0x0e	; 14
    10d4:	0f b6       	in	r0, 0x3f	; 63
    10d6:	f8 94       	cli
    10d8:	de bf       	out	0x3e, r29	; 62
    10da:	0f be       	out	0x3f, r0	; 63
    10dc:	cd bf       	out	0x3d, r28	; 61
    10de:	df 91       	pop	r29
    10e0:	cf 91       	pop	r28
    10e2:	1f 91       	pop	r17
    10e4:	0f 91       	pop	r16
    10e6:	08 95       	ret

000010e8 <vfprintf>:
    10e8:	2f 92       	push	r2
    10ea:	3f 92       	push	r3
    10ec:	4f 92       	push	r4
    10ee:	5f 92       	push	r5
    10f0:	6f 92       	push	r6
    10f2:	7f 92       	push	r7
    10f4:	8f 92       	push	r8
    10f6:	9f 92       	push	r9
    10f8:	af 92       	push	r10
    10fa:	bf 92       	push	r11
    10fc:	cf 92       	push	r12
    10fe:	df 92       	push	r13
    1100:	ef 92       	push	r14
    1102:	ff 92       	push	r15
    1104:	0f 93       	push	r16
    1106:	1f 93       	push	r17
    1108:	cf 93       	push	r28
    110a:	df 93       	push	r29
    110c:	cd b7       	in	r28, 0x3d	; 61
    110e:	de b7       	in	r29, 0x3e	; 62
    1110:	62 97       	sbiw	r28, 0x12	; 18
    1112:	0f b6       	in	r0, 0x3f	; 63
    1114:	f8 94       	cli
    1116:	de bf       	out	0x3e, r29	; 62
    1118:	0f be       	out	0x3f, r0	; 63
    111a:	cd bf       	out	0x3d, r28	; 61
    111c:	ee 24       	eor	r14, r14
    111e:	ff 24       	eor	r15, r15
    1120:	87 01       	movw	r16, r14
    1122:	1c 01       	movw	r2, r24
    1124:	7e 87       	std	Y+14, r23	; 0x0e
    1126:	6d 87       	std	Y+13, r22	; 0x0d
    1128:	2a 01       	movw	r4, r20
    112a:	cc 24       	eor	r12, r12
    112c:	dd 24       	eor	r13, r13
    112e:	fc 01       	movw	r30, r24
    1130:	d7 82       	std	Z+7, r13	; 0x07
    1132:	c6 82       	std	Z+6, r12	; 0x06
    1134:	83 81       	ldd	r24, Z+3	; 0x03
    1136:	81 fd       	sbrc	r24, 1
    1138:	68 c2       	rjmp	.+1232   	; 0x160a <vfprintf+0x522>
    113a:	8f ef       	ldi	r24, 0xFF	; 255
    113c:	9f ef       	ldi	r25, 0xFF	; 255
    113e:	78 c2       	rjmp	.+1264   	; 0x1630 <vfprintf+0x548>
    1140:	8d 85       	ldd	r24, Y+13	; 0x0d
    1142:	9e 85       	ldd	r25, Y+14	; 0x0e
    1144:	01 96       	adiw	r24, 0x01	; 1
    1146:	9e 87       	std	Y+14, r25	; 0x0e
    1148:	8d 87       	std	Y+13, r24	; 0x0d
    114a:	c0 fe       	sbrs	r12, 0
    114c:	4b c2       	rjmp	.+1174   	; 0x15e4 <vfprintf+0x4fc>
    114e:	8f 85       	ldd	r24, Y+15	; 0x0f
    1150:	80 53       	subi	r24, 0x30	; 48
    1152:	8a 30       	cpi	r24, 0x0A	; 10
    1154:	d0 f4       	brcc	.+52     	; 0x118a <vfprintf+0xa2>
    1156:	9f 85       	ldd	r25, Y+15	; 0x0f
    1158:	90 33       	cpi	r25, 0x30	; 48
    115a:	39 f4       	brne	.+14     	; 0x116a <vfprintf+0x82>
    115c:	66 20       	and	r6, r6
    115e:	29 f4       	brne	.+10     	; 0x116a <vfprintf+0x82>
    1160:	c3 fc       	sbrc	r12, 3
    1162:	03 c0       	rjmp	.+6      	; 0x116a <vfprintf+0x82>
    1164:	e0 e0       	ldi	r30, 0x00	; 0
    1166:	f1 e0       	ldi	r31, 0x01	; 1
    1168:	8d c0       	rjmp	.+282    	; 0x1284 <vfprintf+0x19c>
    116a:	8a e0       	ldi	r24, 0x0A	; 10
    116c:	68 9e       	mul	r6, r24
    116e:	60 2c       	mov	r6, r0
    1170:	11 24       	eor	r1, r1
    1172:	ff 85       	ldd	r31, Y+15	; 0x0f
    1174:	6f 0e       	add	r6, r31
    1176:	20 ed       	ldi	r18, 0xD0	; 208
    1178:	62 0e       	add	r6, r18
    117a:	67 fe       	sbrs	r6, 7
    117c:	02 c0       	rjmp	.+4      	; 0x1182 <vfprintf+0x9a>
    117e:	5f e7       	ldi	r21, 0x7F	; 127
    1180:	65 2e       	mov	r6, r21
    1182:	c3 fc       	sbrc	r12, 3
    1184:	42 c2       	rjmp	.+1156   	; 0x160a <vfprintf+0x522>
    1186:	76 2c       	mov	r7, r6
    1188:	40 c2       	rjmp	.+1152   	; 0x160a <vfprintf+0x522>
    118a:	c3 fe       	sbrs	r12, 3
    118c:	04 c0       	rjmp	.+8      	; 0x1196 <vfprintf+0xae>
    118e:	66 20       	and	r6, r6
    1190:	11 f4       	brne	.+4      	; 0x1196 <vfprintf+0xae>
    1192:	41 e0       	ldi	r20, 0x01	; 1
    1194:	64 2e       	mov	r6, r20
    1196:	ef 85       	ldd	r30, Y+15	; 0x0f
    1198:	8e 2f       	mov	r24, r30
    119a:	99 27       	eor	r25, r25
    119c:	87 fd       	sbrc	r24, 7
    119e:	90 95       	com	r25
    11a0:	88 36       	cpi	r24, 0x68	; 104
    11a2:	91 05       	cpc	r25, r1
    11a4:	8c f5       	brge	.+98     	; 0x1208 <vfprintf+0x120>
    11a6:	85 36       	cpi	r24, 0x65	; 101
    11a8:	91 05       	cpc	r25, r1
    11aa:	0c f0       	brlt	.+2      	; 0x11ae <vfprintf+0xc6>
    11ac:	6e c0       	rjmp	.+220    	; 0x128a <vfprintf+0x1a2>
    11ae:	83 35       	cpi	r24, 0x53	; 83
    11b0:	91 05       	cpc	r25, r1
    11b2:	09 f4       	brne	.+2      	; 0x11b6 <vfprintf+0xce>
    11b4:	93 c0       	rjmp	.+294    	; 0x12dc <vfprintf+0x1f4>
    11b6:	84 35       	cpi	r24, 0x54	; 84
    11b8:	91 05       	cpc	r25, r1
    11ba:	cc f4       	brge	.+50     	; 0x11ee <vfprintf+0x106>
    11bc:	8b 32       	cpi	r24, 0x2B	; 43
    11be:	91 05       	cpc	r25, r1
    11c0:	09 f4       	brne	.+2      	; 0x11c4 <vfprintf+0xdc>
    11c2:	49 c0       	rjmp	.+146    	; 0x1256 <vfprintf+0x16e>
    11c4:	8c 32       	cpi	r24, 0x2C	; 44
    11c6:	91 05       	cpc	r25, r1
    11c8:	4c f4       	brge	.+18     	; 0x11dc <vfprintf+0xf4>
    11ca:	80 32       	cpi	r24, 0x20	; 32
    11cc:	91 05       	cpc	r25, r1
    11ce:	09 f4       	brne	.+2      	; 0x11d2 <vfprintf+0xea>
    11d0:	46 c0       	rjmp	.+140    	; 0x125e <vfprintf+0x176>
    11d2:	83 32       	cpi	r24, 0x23	; 35
    11d4:	91 05       	cpc	r25, r1
    11d6:	09 f4       	brne	.+2      	; 0x11da <vfprintf+0xf2>
    11d8:	4a c0       	rjmp	.+148    	; 0x126e <vfprintf+0x186>
    11da:	fe c1       	rjmp	.+1020   	; 0x15d8 <vfprintf+0x4f0>
    11dc:	8d 32       	cpi	r24, 0x2D	; 45
    11de:	91 05       	cpc	r25, r1
    11e0:	09 f4       	brne	.+2      	; 0x11e4 <vfprintf+0xfc>
    11e2:	40 c0       	rjmp	.+128    	; 0x1264 <vfprintf+0x17c>
    11e4:	8e 32       	cpi	r24, 0x2E	; 46
    11e6:	91 05       	cpc	r25, r1
    11e8:	09 f4       	brne	.+2      	; 0x11ec <vfprintf+0x104>
    11ea:	44 c0       	rjmp	.+136    	; 0x1274 <vfprintf+0x18c>
    11ec:	f5 c1       	rjmp	.+1002   	; 0x15d8 <vfprintf+0x4f0>
    11ee:	83 36       	cpi	r24, 0x63	; 99
    11f0:	91 05       	cpc	r25, r1
    11f2:	09 f4       	brne	.+2      	; 0x11f6 <vfprintf+0x10e>
    11f4:	50 c0       	rjmp	.+160    	; 0x1296 <vfprintf+0x1ae>
    11f6:	84 36       	cpi	r24, 0x64	; 100
    11f8:	91 05       	cpc	r25, r1
    11fa:	0c f0       	brlt	.+2      	; 0x11fe <vfprintf+0x116>
    11fc:	8a c0       	rjmp	.+276    	; 0x1312 <vfprintf+0x22a>
    11fe:	88 35       	cpi	r24, 0x58	; 88
    1200:	91 05       	cpc	r25, r1
    1202:	09 f4       	brne	.+2      	; 0x1206 <vfprintf+0x11e>
    1204:	bc c0       	rjmp	.+376    	; 0x137e <vfprintf+0x296>
    1206:	e8 c1       	rjmp	.+976    	; 0x15d8 <vfprintf+0x4f0>
    1208:	80 37       	cpi	r24, 0x70	; 112
    120a:	91 05       	cpc	r25, r1
    120c:	09 f4       	brne	.+2      	; 0x1210 <vfprintf+0x128>
    120e:	b1 c0       	rjmp	.+354    	; 0x1372 <vfprintf+0x28a>
    1210:	81 37       	cpi	r24, 0x71	; 113
    1212:	91 05       	cpc	r25, r1
    1214:	84 f4       	brge	.+32     	; 0x1236 <vfprintf+0x14e>
    1216:	8c 36       	cpi	r24, 0x6C	; 108
    1218:	91 05       	cpc	r25, r1
    121a:	91 f1       	breq	.+100    	; 0x1280 <vfprintf+0x198>
    121c:	8d 36       	cpi	r24, 0x6D	; 109
    121e:	91 05       	cpc	r25, r1
    1220:	2c f4       	brge	.+10     	; 0x122c <vfprintf+0x144>
    1222:	89 36       	cpi	r24, 0x69	; 105
    1224:	91 05       	cpc	r25, r1
    1226:	09 f4       	brne	.+2      	; 0x122a <vfprintf+0x142>
    1228:	74 c0       	rjmp	.+232    	; 0x1312 <vfprintf+0x22a>
    122a:	d6 c1       	rjmp	.+940    	; 0x15d8 <vfprintf+0x4f0>
    122c:	8f 36       	cpi	r24, 0x6F	; 111
    122e:	91 05       	cpc	r25, r1
    1230:	09 f4       	brne	.+2      	; 0x1234 <vfprintf+0x14c>
    1232:	9c c0       	rjmp	.+312    	; 0x136c <vfprintf+0x284>
    1234:	d1 c1       	rjmp	.+930    	; 0x15d8 <vfprintf+0x4f0>
    1236:	85 37       	cpi	r24, 0x75	; 117
    1238:	91 05       	cpc	r25, r1
    123a:	09 f4       	brne	.+2      	; 0x123e <vfprintf+0x156>
    123c:	a2 c0       	rjmp	.+324    	; 0x1382 <vfprintf+0x29a>
    123e:	86 37       	cpi	r24, 0x76	; 118
    1240:	91 05       	cpc	r25, r1
    1242:	24 f4       	brge	.+8      	; 0x124c <vfprintf+0x164>
    1244:	83 37       	cpi	r24, 0x73	; 115
    1246:	91 05       	cpc	r25, r1
    1248:	71 f1       	breq	.+92     	; 0x12a6 <vfprintf+0x1be>
    124a:	c6 c1       	rjmp	.+908    	; 0x15d8 <vfprintf+0x4f0>
    124c:	88 37       	cpi	r24, 0x78	; 120
    124e:	91 05       	cpc	r25, r1
    1250:	09 f4       	brne	.+2      	; 0x1254 <vfprintf+0x16c>
    1252:	95 c0       	rjmp	.+298    	; 0x137e <vfprintf+0x296>
    1254:	c1 c1       	rjmp	.+898    	; 0x15d8 <vfprintf+0x4f0>
    1256:	80 e1       	ldi	r24, 0x10	; 16
    1258:	90 e0       	ldi	r25, 0x00	; 0
    125a:	c8 2a       	or	r12, r24
    125c:	d9 2a       	or	r13, r25
    125e:	e0 e2       	ldi	r30, 0x20	; 32
    1260:	f0 e0       	ldi	r31, 0x00	; 0
    1262:	10 c0       	rjmp	.+32     	; 0x1284 <vfprintf+0x19c>
    1264:	80 e8       	ldi	r24, 0x80	; 128
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	c8 2a       	or	r12, r24
    126a:	d9 2a       	or	r13, r25
    126c:	ce c1       	rjmp	.+924    	; 0x160a <vfprintf+0x522>
    126e:	e0 e4       	ldi	r30, 0x40	; 64
    1270:	f0 e0       	ldi	r31, 0x00	; 0
    1272:	08 c0       	rjmp	.+16     	; 0x1284 <vfprintf+0x19c>
    1274:	88 e0       	ldi	r24, 0x08	; 8
    1276:	90 e0       	ldi	r25, 0x00	; 0
    1278:	c8 2a       	or	r12, r24
    127a:	d9 2a       	or	r13, r25
    127c:	66 24       	eor	r6, r6
    127e:	c5 c1       	rjmp	.+906    	; 0x160a <vfprintf+0x522>
    1280:	e4 e0       	ldi	r30, 0x04	; 4
    1282:	f0 e0       	ldi	r31, 0x00	; 0
    1284:	ce 2a       	or	r12, r30
    1286:	df 2a       	or	r13, r31
    1288:	c0 c1       	rjmp	.+896    	; 0x160a <vfprintf+0x522>
    128a:	3f e3       	ldi	r19, 0x3F	; 63
    128c:	e3 2e       	mov	r14, r19
    128e:	7a 94       	dec	r7
    1290:	f3 e6       	ldi	r31, 0x63	; 99
    1292:	ff 87       	std	Y+15, r31	; 0x0f
    1294:	3c c1       	rjmp	.+632    	; 0x150e <vfprintf+0x426>
    1296:	f2 01       	movw	r30, r4
    1298:	82 e0       	ldi	r24, 0x02	; 2
    129a:	90 e0       	ldi	r25, 0x00	; 0
    129c:	48 0e       	add	r4, r24
    129e:	59 1e       	adc	r5, r25
    12a0:	e0 80       	ld	r14, Z
    12a2:	7a 94       	dec	r7
    12a4:	34 c1       	rjmp	.+616    	; 0x150e <vfprintf+0x426>
    12a6:	f2 01       	movw	r30, r4
    12a8:	82 e0       	ldi	r24, 0x02	; 2
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	48 0e       	add	r4, r24
    12ae:	59 1e       	adc	r5, r25
    12b0:	a0 81       	ld	r26, Z
    12b2:	b1 81       	ldd	r27, Z+1	; 0x01
    12b4:	7d 01       	movw	r14, r26
    12b6:	c3 fe       	sbrs	r12, 3
    12b8:	09 c0       	rjmp	.+18     	; 0x12cc <vfprintf+0x1e4>
    12ba:	86 2d       	mov	r24, r6
    12bc:	99 27       	eor	r25, r25
    12be:	87 fd       	sbrc	r24, 7
    12c0:	90 95       	com	r25
    12c2:	bc 01       	movw	r22, r24
    12c4:	cd 01       	movw	r24, r26
    12c6:	0e 94 45 0b 	call	0x168a <strnlen>
    12ca:	1f c0       	rjmp	.+62     	; 0x130a <vfprintf+0x222>
    12cc:	fd 01       	movw	r30, r26
    12ce:	01 90       	ld	r0, Z+
    12d0:	00 20       	and	r0, r0
    12d2:	e9 f7       	brne	.-6      	; 0x12ce <vfprintf+0x1e6>
    12d4:	31 97       	sbiw	r30, 0x01	; 1
    12d6:	ea 1b       	sub	r30, r26
    12d8:	e8 8b       	std	Y+16, r30	; 0x10
    12da:	18 c0       	rjmp	.+48     	; 0x130c <vfprintf+0x224>
    12dc:	f2 01       	movw	r30, r4
    12de:	82 e0       	ldi	r24, 0x02	; 2
    12e0:	90 e0       	ldi	r25, 0x00	; 0
    12e2:	48 0e       	add	r4, r24
    12e4:	59 1e       	adc	r5, r25
    12e6:	01 90       	ld	r0, Z+
    12e8:	f0 81       	ld	r31, Z
    12ea:	e0 2d       	mov	r30, r0
    12ec:	7f 01       	movw	r14, r30
    12ee:	c3 fe       	sbrs	r12, 3
    12f0:	09 c0       	rjmp	.+18     	; 0x1304 <vfprintf+0x21c>
    12f2:	86 2d       	mov	r24, r6
    12f4:	99 27       	eor	r25, r25
    12f6:	87 fd       	sbrc	r24, 7
    12f8:	90 95       	com	r25
    12fa:	bc 01       	movw	r22, r24
    12fc:	cf 01       	movw	r24, r30
    12fe:	0e 94 3a 0b 	call	0x1674 <strnlen_P>
    1302:	03 c0       	rjmp	.+6      	; 0x130a <vfprintf+0x222>
    1304:	cf 01       	movw	r24, r30
    1306:	0e 94 31 0b 	call	0x1662 <strlen_P>
    130a:	88 8b       	std	Y+16, r24	; 0x10
    130c:	98 89       	ldd	r25, Y+16	; 0x10
    130e:	79 1a       	sub	r7, r25
    1310:	fe c0       	rjmp	.+508    	; 0x150e <vfprintf+0x426>
    1312:	c2 fe       	sbrs	r12, 2
    1314:	0a c0       	rjmp	.+20     	; 0x132a <vfprintf+0x242>
    1316:	f2 01       	movw	r30, r4
    1318:	84 e0       	ldi	r24, 0x04	; 4
    131a:	90 e0       	ldi	r25, 0x00	; 0
    131c:	48 0e       	add	r4, r24
    131e:	59 1e       	adc	r5, r25
    1320:	20 81       	ld	r18, Z
    1322:	31 81       	ldd	r19, Z+1	; 0x01
    1324:	42 81       	ldd	r20, Z+2	; 0x02
    1326:	53 81       	ldd	r21, Z+3	; 0x03
    1328:	0c c0       	rjmp	.+24     	; 0x1342 <vfprintf+0x25a>
    132a:	f2 01       	movw	r30, r4
    132c:	82 e0       	ldi	r24, 0x02	; 2
    132e:	90 e0       	ldi	r25, 0x00	; 0
    1330:	48 0e       	add	r4, r24
    1332:	59 1e       	adc	r5, r25
    1334:	80 81       	ld	r24, Z
    1336:	91 81       	ldd	r25, Z+1	; 0x01
    1338:	9c 01       	movw	r18, r24
    133a:	44 27       	eor	r20, r20
    133c:	37 fd       	sbrc	r19, 7
    133e:	40 95       	com	r20
    1340:	54 2f       	mov	r21, r20
    1342:	79 01       	movw	r14, r18
    1344:	8a 01       	movw	r16, r20
    1346:	57 ff       	sbrs	r21, 7
    1348:	0c c0       	rjmp	.+24     	; 0x1362 <vfprintf+0x27a>
    134a:	e2 e0       	ldi	r30, 0x02	; 2
    134c:	f0 e0       	ldi	r31, 0x00	; 0
    134e:	ce 2a       	or	r12, r30
    1350:	df 2a       	or	r13, r31
    1352:	10 95       	com	r17
    1354:	00 95       	com	r16
    1356:	f0 94       	com	r15
    1358:	e0 94       	com	r14
    135a:	e1 1c       	adc	r14, r1
    135c:	f1 1c       	adc	r15, r1
    135e:	01 1d       	adc	r16, r1
    1360:	11 1d       	adc	r17, r1
    1362:	8f eb       	ldi	r24, 0xBF	; 191
    1364:	9f ef       	ldi	r25, 0xFF	; 255
    1366:	c8 22       	and	r12, r24
    1368:	d9 22       	and	r13, r25
    136a:	27 c0       	rjmp	.+78     	; 0x13ba <vfprintf+0x2d2>
    136c:	98 e0       	ldi	r25, 0x08	; 8
    136e:	98 8b       	std	Y+16, r25	; 0x10
    1370:	08 c0       	rjmp	.+16     	; 0x1382 <vfprintf+0x29a>
    1372:	e0 e4       	ldi	r30, 0x40	; 64
    1374:	f0 e0       	ldi	r31, 0x00	; 0
    1376:	ce 2a       	or	r12, r30
    1378:	df 2a       	or	r13, r31
    137a:	f8 e7       	ldi	r31, 0x78	; 120
    137c:	ff 87       	std	Y+15, r31	; 0x0f
    137e:	20 e1       	ldi	r18, 0x10	; 16
    1380:	28 8b       	std	Y+16, r18	; 0x10
    1382:	c2 fe       	sbrs	r12, 2
    1384:	0a c0       	rjmp	.+20     	; 0x139a <vfprintf+0x2b2>
    1386:	f2 01       	movw	r30, r4
    1388:	84 e0       	ldi	r24, 0x04	; 4
    138a:	90 e0       	ldi	r25, 0x00	; 0
    138c:	48 0e       	add	r4, r24
    138e:	59 1e       	adc	r5, r25
    1390:	20 81       	ld	r18, Z
    1392:	31 81       	ldd	r19, Z+1	; 0x01
    1394:	42 81       	ldd	r20, Z+2	; 0x02
    1396:	53 81       	ldd	r21, Z+3	; 0x03
    1398:	0a c0       	rjmp	.+20     	; 0x13ae <vfprintf+0x2c6>
    139a:	f2 01       	movw	r30, r4
    139c:	82 e0       	ldi	r24, 0x02	; 2
    139e:	90 e0       	ldi	r25, 0x00	; 0
    13a0:	48 0e       	add	r4, r24
    13a2:	59 1e       	adc	r5, r25
    13a4:	80 81       	ld	r24, Z
    13a6:	91 81       	ldd	r25, Z+1	; 0x01
    13a8:	9c 01       	movw	r18, r24
    13aa:	44 27       	eor	r20, r20
    13ac:	55 27       	eor	r21, r21
    13ae:	79 01       	movw	r14, r18
    13b0:	8a 01       	movw	r16, r20
    13b2:	ef ec       	ldi	r30, 0xCF	; 207
    13b4:	ff ef       	ldi	r31, 0xFF	; 255
    13b6:	ce 22       	and	r12, r30
    13b8:	df 22       	and	r13, r31
    13ba:	ce 01       	movw	r24, r28
    13bc:	01 96       	adiw	r24, 0x01	; 1
    13be:	9a 8b       	std	Y+18, r25	; 0x12
    13c0:	89 8b       	std	Y+17, r24	; 0x11
    13c2:	98 89       	ldd	r25, Y+16	; 0x10
    13c4:	89 2e       	mov	r8, r25
    13c6:	99 24       	eor	r9, r9
    13c8:	aa 24       	eor	r10, r10
    13ca:	bb 24       	eor	r11, r11
    13cc:	c8 01       	movw	r24, r16
    13ce:	b7 01       	movw	r22, r14
    13d0:	a5 01       	movw	r20, r10
    13d2:	94 01       	movw	r18, r8
    13d4:	0e 94 9c 0b 	call	0x1738 <__udivmodsi4>
    13d8:	dc 01       	movw	r26, r24
    13da:	cb 01       	movw	r24, r22
    13dc:	e9 89       	ldd	r30, Y+17	; 0x11
    13de:	fa 89       	ldd	r31, Y+18	; 0x12
    13e0:	80 83       	st	Z, r24
    13e2:	8a 30       	cpi	r24, 0x0A	; 10
    13e4:	24 f0       	brlt	.+8      	; 0x13ee <vfprintf+0x306>
    13e6:	ff 85       	ldd	r31, Y+15	; 0x0f
    13e8:	8f 0f       	add	r24, r31
    13ea:	81 52       	subi	r24, 0x21	; 33
    13ec:	01 c0       	rjmp	.+2      	; 0x13f0 <vfprintf+0x308>
    13ee:	80 5d       	subi	r24, 0xD0	; 208
    13f0:	e9 89       	ldd	r30, Y+17	; 0x11
    13f2:	fa 89       	ldd	r31, Y+18	; 0x12
    13f4:	81 93       	st	Z+, r24
    13f6:	fa 8b       	std	Y+18, r31	; 0x12
    13f8:	e9 8b       	std	Y+17, r30	; 0x11
    13fa:	c8 01       	movw	r24, r16
    13fc:	b7 01       	movw	r22, r14
    13fe:	a5 01       	movw	r20, r10
    1400:	94 01       	movw	r18, r8
    1402:	0e 94 9c 0b 	call	0x1738 <__udivmodsi4>
    1406:	79 01       	movw	r14, r18
    1408:	8a 01       	movw	r16, r20
    140a:	21 15       	cp	r18, r1
    140c:	31 05       	cpc	r19, r1
    140e:	41 05       	cpc	r20, r1
    1410:	51 05       	cpc	r21, r1
    1412:	e1 f6       	brne	.-72     	; 0x13cc <vfprintf+0x2e4>
    1414:	e9 88       	ldd	r14, Y+17	; 0x11
    1416:	81 e0       	ldi	r24, 0x01	; 1
    1418:	90 e0       	ldi	r25, 0x00	; 0
    141a:	8c 0f       	add	r24, r28
    141c:	9d 1f       	adc	r25, r29
    141e:	e8 1a       	sub	r14, r24
    1420:	c6 01       	movw	r24, r12
    1422:	82 73       	andi	r24, 0x32	; 50
    1424:	90 70       	andi	r25, 0x00	; 0
    1426:	89 2b       	or	r24, r25
    1428:	09 f0       	breq	.+2      	; 0x142c <vfprintf+0x344>
    142a:	7a 94       	dec	r7
    142c:	c6 fe       	sbrs	r12, 6
    142e:	0d c0       	rjmp	.+26     	; 0x144a <vfprintf+0x362>
    1430:	87 2d       	mov	r24, r7
    1432:	99 27       	eor	r25, r25
    1434:	87 fd       	sbrc	r24, 7
    1436:	90 95       	com	r25
    1438:	e8 89       	ldd	r30, Y+16	; 0x10
    143a:	e0 31       	cpi	r30, 0x10	; 16
    143c:	21 f4       	brne	.+8      	; 0x1446 <vfprintf+0x35e>
    143e:	2e ef       	ldi	r18, 0xFE	; 254
    1440:	72 2e       	mov	r7, r18
    1442:	78 0e       	add	r7, r24
    1444:	02 c0       	rjmp	.+4      	; 0x144a <vfprintf+0x362>
    1446:	78 2e       	mov	r7, r24
    1448:	7a 94       	dec	r7
    144a:	c3 fe       	sbrs	r12, 3
    144c:	0f c0       	rjmp	.+30     	; 0x146c <vfprintf+0x384>
    144e:	26 2d       	mov	r18, r6
    1450:	33 27       	eor	r19, r19
    1452:	27 fd       	sbrc	r18, 7
    1454:	30 95       	com	r19
    1456:	8e 2d       	mov	r24, r14
    1458:	99 27       	eor	r25, r25
    145a:	82 17       	cp	r24, r18
    145c:	93 07       	cpc	r25, r19
    145e:	2c f0       	brlt	.+10     	; 0x146a <vfprintf+0x382>
    1460:	87 ef       	ldi	r24, 0xF7	; 247
    1462:	9f ef       	ldi	r25, 0xFF	; 255
    1464:	c8 22       	and	r12, r24
    1466:	d9 22       	and	r13, r25
    1468:	01 c0       	rjmp	.+2      	; 0x146c <vfprintf+0x384>
    146a:	6e 18       	sub	r6, r14
    146c:	c3 fe       	sbrs	r12, 3
    146e:	02 c0       	rjmp	.+4      	; 0x1474 <vfprintf+0x38c>
    1470:	76 18       	sub	r7, r6
    1472:	01 c0       	rjmp	.+2      	; 0x1476 <vfprintf+0x38e>
    1474:	7e 18       	sub	r7, r14
    1476:	c6 01       	movw	r24, r12
    1478:	80 78       	andi	r24, 0x80	; 128
    147a:	91 70       	andi	r25, 0x01	; 1
    147c:	89 2b       	or	r24, r25
    147e:	51 f4       	brne	.+20     	; 0x1494 <vfprintf+0x3ac>
    1480:	87 2d       	mov	r24, r7
    1482:	7a 94       	dec	r7
    1484:	18 16       	cp	r1, r24
    1486:	34 f4       	brge	.+12     	; 0x1494 <vfprintf+0x3ac>
    1488:	b1 01       	movw	r22, r2
    148a:	80 e2       	ldi	r24, 0x20	; 32
    148c:	90 e0       	ldi	r25, 0x00	; 0
    148e:	0e 94 50 0b 	call	0x16a0 <fputc>
    1492:	f6 cf       	rjmp	.-20     	; 0x1480 <vfprintf+0x398>
    1494:	c1 fe       	sbrs	r12, 1
    1496:	04 c0       	rjmp	.+8      	; 0x14a0 <vfprintf+0x3b8>
    1498:	b1 01       	movw	r22, r2
    149a:	8d e2       	ldi	r24, 0x2D	; 45
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	0b c0       	rjmp	.+22     	; 0x14b6 <vfprintf+0x3ce>
    14a0:	c4 fe       	sbrs	r12, 4
    14a2:	04 c0       	rjmp	.+8      	; 0x14ac <vfprintf+0x3c4>
    14a4:	b1 01       	movw	r22, r2
    14a6:	8b e2       	ldi	r24, 0x2B	; 43
    14a8:	90 e0       	ldi	r25, 0x00	; 0
    14aa:	05 c0       	rjmp	.+10     	; 0x14b6 <vfprintf+0x3ce>
    14ac:	c5 fe       	sbrs	r12, 5
    14ae:	05 c0       	rjmp	.+10     	; 0x14ba <vfprintf+0x3d2>
    14b0:	b1 01       	movw	r22, r2
    14b2:	80 e2       	ldi	r24, 0x20	; 32
    14b4:	90 e0       	ldi	r25, 0x00	; 0
    14b6:	0e 94 50 0b 	call	0x16a0 <fputc>
    14ba:	c6 fe       	sbrs	r12, 6
    14bc:	10 c0       	rjmp	.+32     	; 0x14de <vfprintf+0x3f6>
    14be:	b1 01       	movw	r22, r2
    14c0:	80 e3       	ldi	r24, 0x30	; 48
    14c2:	90 e0       	ldi	r25, 0x00	; 0
    14c4:	0e 94 50 0b 	call	0x16a0 <fputc>
    14c8:	98 89       	ldd	r25, Y+16	; 0x10
    14ca:	90 31       	cpi	r25, 0x10	; 16
    14cc:	41 f4       	brne	.+16     	; 0x14de <vfprintf+0x3f6>
    14ce:	b1 01       	movw	r22, r2
    14d0:	ef 85       	ldd	r30, Y+15	; 0x0f
    14d2:	8e 2f       	mov	r24, r30
    14d4:	99 27       	eor	r25, r25
    14d6:	87 fd       	sbrc	r24, 7
    14d8:	90 95       	com	r25
    14da:	0e 94 50 0b 	call	0x16a0 <fputc>
    14de:	d0 fe       	sbrs	r13, 0
    14e0:	0a c0       	rjmp	.+20     	; 0x14f6 <vfprintf+0x40e>
    14e2:	87 2d       	mov	r24, r7
    14e4:	7a 94       	dec	r7
    14e6:	18 16       	cp	r1, r24
    14e8:	34 f4       	brge	.+12     	; 0x14f6 <vfprintf+0x40e>
    14ea:	b1 01       	movw	r22, r2
    14ec:	80 e3       	ldi	r24, 0x30	; 48
    14ee:	90 e0       	ldi	r25, 0x00	; 0
    14f0:	0e 94 50 0b 	call	0x16a0 <fputc>
    14f4:	f6 cf       	rjmp	.-20     	; 0x14e2 <vfprintf+0x3fa>
    14f6:	c3 fe       	sbrs	r12, 3
    14f8:	0a c0       	rjmp	.+20     	; 0x150e <vfprintf+0x426>
    14fa:	86 2d       	mov	r24, r6
    14fc:	6a 94       	dec	r6
    14fe:	18 16       	cp	r1, r24
    1500:	34 f4       	brge	.+12     	; 0x150e <vfprintf+0x426>
    1502:	b1 01       	movw	r22, r2
    1504:	80 e3       	ldi	r24, 0x30	; 48
    1506:	90 e0       	ldi	r25, 0x00	; 0
    1508:	0e 94 50 0b 	call	0x16a0 <fputc>
    150c:	f6 cf       	rjmp	.-20     	; 0x14fa <vfprintf+0x412>
    150e:	90 e8       	ldi	r25, 0x80	; 128
    1510:	b9 2e       	mov	r11, r25
    1512:	bc 20       	and	r11, r12
    1514:	51 f4       	brne	.+20     	; 0x152a <vfprintf+0x442>
    1516:	87 2d       	mov	r24, r7
    1518:	7a 94       	dec	r7
    151a:	18 16       	cp	r1, r24
    151c:	34 f4       	brge	.+12     	; 0x152a <vfprintf+0x442>
    151e:	b1 01       	movw	r22, r2
    1520:	80 e2       	ldi	r24, 0x20	; 32
    1522:	90 e0       	ldi	r25, 0x00	; 0
    1524:	0e 94 50 0b 	call	0x16a0 <fputc>
    1528:	f6 cf       	rjmp	.-20     	; 0x1516 <vfprintf+0x42e>
    152a:	ff 85       	ldd	r31, Y+15	; 0x0f
    152c:	f3 36       	cpi	r31, 0x63	; 99
    152e:	41 f4       	brne	.+16     	; 0x1540 <vfprintf+0x458>
    1530:	8e 2d       	mov	r24, r14
    1532:	b1 01       	movw	r22, r2
    1534:	99 27       	eor	r25, r25
    1536:	87 fd       	sbrc	r24, 7
    1538:	90 95       	com	r25
    153a:	0e 94 50 0b 	call	0x16a0 <fputc>
    153e:	40 c0       	rjmp	.+128    	; 0x15c0 <vfprintf+0x4d8>
    1540:	2f 85       	ldd	r18, Y+15	; 0x0f
    1542:	23 37       	cpi	r18, 0x73	; 115
    1544:	b1 f4       	brne	.+44     	; 0x1572 <vfprintf+0x48a>
    1546:	88 89       	ldd	r24, Y+16	; 0x10
    1548:	81 50       	subi	r24, 0x01	; 1
    154a:	88 8b       	std	Y+16, r24	; 0x10
    154c:	8f 3f       	cpi	r24, 0xFF	; 255
    154e:	c1 f1       	breq	.+112    	; 0x15c0 <vfprintf+0x4d8>
    1550:	f7 01       	movw	r30, r14
    1552:	80 81       	ld	r24, Z
    1554:	08 94       	sec
    1556:	e1 1c       	adc	r14, r1
    1558:	f1 1c       	adc	r15, r1
    155a:	b1 01       	movw	r22, r2
    155c:	99 27       	eor	r25, r25
    155e:	87 fd       	sbrc	r24, 7
    1560:	90 95       	com	r25
    1562:	0e 94 50 0b 	call	0x16a0 <fputc>
    1566:	98 89       	ldd	r25, Y+16	; 0x10
    1568:	91 50       	subi	r25, 0x01	; 1
    156a:	98 8b       	std	Y+16, r25	; 0x10
    156c:	9f 3f       	cpi	r25, 0xFF	; 255
    156e:	81 f7       	brne	.-32     	; 0x1550 <vfprintf+0x468>
    1570:	27 c0       	rjmp	.+78     	; 0x15c0 <vfprintf+0x4d8>
    1572:	ef 85       	ldd	r30, Y+15	; 0x0f
    1574:	e3 35       	cpi	r30, 0x53	; 83
    1576:	79 f4       	brne	.+30     	; 0x1596 <vfprintf+0x4ae>
    1578:	f8 89       	ldd	r31, Y+16	; 0x10
    157a:	f1 50       	subi	r31, 0x01	; 1
    157c:	f8 8b       	std	Y+16, r31	; 0x10
    157e:	ff 3f       	cpi	r31, 0xFF	; 255
    1580:	f9 f0       	breq	.+62     	; 0x15c0 <vfprintf+0x4d8>
    1582:	f7 01       	movw	r30, r14
    1584:	84 91       	lpm	r24, Z
    1586:	b1 01       	movw	r22, r2
    1588:	99 27       	eor	r25, r25
    158a:	0e 94 50 0b 	call	0x16a0 <fputc>
    158e:	08 94       	sec
    1590:	e1 1c       	adc	r14, r1
    1592:	f1 1c       	adc	r15, r1
    1594:	f1 cf       	rjmp	.-30     	; 0x1578 <vfprintf+0x490>
    1596:	6e 01       	movw	r12, r28
    1598:	08 94       	sec
    159a:	c1 1c       	adc	r12, r1
    159c:	d1 1c       	adc	r13, r1
    159e:	89 89       	ldd	r24, Y+17	; 0x11
    15a0:	9a 89       	ldd	r25, Y+18	; 0x12
    15a2:	8c 15       	cp	r24, r12
    15a4:	9d 05       	cpc	r25, r13
    15a6:	61 f0       	breq	.+24     	; 0x15c0 <vfprintf+0x4d8>
    15a8:	e9 89       	ldd	r30, Y+17	; 0x11
    15aa:	fa 89       	ldd	r31, Y+18	; 0x12
    15ac:	82 91       	ld	r24, -Z
    15ae:	fa 8b       	std	Y+18, r31	; 0x12
    15b0:	e9 8b       	std	Y+17, r30	; 0x11
    15b2:	b1 01       	movw	r22, r2
    15b4:	99 27       	eor	r25, r25
    15b6:	87 fd       	sbrc	r24, 7
    15b8:	90 95       	com	r25
    15ba:	0e 94 50 0b 	call	0x16a0 <fputc>
    15be:	ef cf       	rjmp	.-34     	; 0x159e <vfprintf+0x4b6>
    15c0:	bb 20       	and	r11, r11
    15c2:	69 f0       	breq	.+26     	; 0x15de <vfprintf+0x4f6>
    15c4:	87 2d       	mov	r24, r7
    15c6:	7a 94       	dec	r7
    15c8:	18 16       	cp	r1, r24
    15ca:	4c f4       	brge	.+18     	; 0x15de <vfprintf+0x4f6>
    15cc:	b1 01       	movw	r22, r2
    15ce:	80 e2       	ldi	r24, 0x20	; 32
    15d0:	90 e0       	ldi	r25, 0x00	; 0
    15d2:	0e 94 50 0b 	call	0x16a0 <fputc>
    15d6:	f6 cf       	rjmp	.-20     	; 0x15c4 <vfprintf+0x4dc>
    15d8:	b1 01       	movw	r22, r2
    15da:	0e 94 50 0b 	call	0x16a0 <fputc>
    15de:	cc 24       	eor	r12, r12
    15e0:	dd 24       	eor	r13, r13
    15e2:	13 c0       	rjmp	.+38     	; 0x160a <vfprintf+0x522>
    15e4:	9f 85       	ldd	r25, Y+15	; 0x0f
    15e6:	95 32       	cpi	r25, 0x25	; 37
    15e8:	41 f4       	brne	.+16     	; 0x15fa <vfprintf+0x512>
    15ea:	81 e0       	ldi	r24, 0x01	; 1
    15ec:	c8 2e       	mov	r12, r24
    15ee:	d1 2c       	mov	r13, r1
    15f0:	66 24       	eor	r6, r6
    15f2:	76 2c       	mov	r7, r6
    15f4:	ea e0       	ldi	r30, 0x0A	; 10
    15f6:	e8 8b       	std	Y+16, r30	; 0x10
    15f8:	08 c0       	rjmp	.+16     	; 0x160a <vfprintf+0x522>
    15fa:	b1 01       	movw	r22, r2
    15fc:	ff 85       	ldd	r31, Y+15	; 0x0f
    15fe:	8f 2f       	mov	r24, r31
    1600:	99 27       	eor	r25, r25
    1602:	87 fd       	sbrc	r24, 7
    1604:	90 95       	com	r25
    1606:	0e 94 50 0b 	call	0x16a0 <fputc>
    160a:	f1 01       	movw	r30, r2
    160c:	83 81       	ldd	r24, Z+3	; 0x03
    160e:	83 ff       	sbrs	r24, 3
    1610:	04 c0       	rjmp	.+8      	; 0x161a <vfprintf+0x532>
    1612:	ed 85       	ldd	r30, Y+13	; 0x0d
    1614:	fe 85       	ldd	r31, Y+14	; 0x0e
    1616:	f4 91       	lpm	r31, Z
    1618:	03 c0       	rjmp	.+6      	; 0x1620 <vfprintf+0x538>
    161a:	ed 85       	ldd	r30, Y+13	; 0x0d
    161c:	fe 85       	ldd	r31, Y+14	; 0x0e
    161e:	f0 81       	ld	r31, Z
    1620:	ff 87       	std	Y+15, r31	; 0x0f
    1622:	2f 85       	ldd	r18, Y+15	; 0x0f
    1624:	22 23       	and	r18, r18
    1626:	09 f0       	breq	.+2      	; 0x162a <vfprintf+0x542>
    1628:	8b cd       	rjmp	.-1258   	; 0x1140 <vfprintf+0x58>
    162a:	f1 01       	movw	r30, r2
    162c:	86 81       	ldd	r24, Z+6	; 0x06
    162e:	97 81       	ldd	r25, Z+7	; 0x07
    1630:	62 96       	adiw	r28, 0x12	; 18
    1632:	0f b6       	in	r0, 0x3f	; 63
    1634:	f8 94       	cli
    1636:	de bf       	out	0x3e, r29	; 62
    1638:	0f be       	out	0x3f, r0	; 63
    163a:	cd bf       	out	0x3d, r28	; 61
    163c:	df 91       	pop	r29
    163e:	cf 91       	pop	r28
    1640:	1f 91       	pop	r17
    1642:	0f 91       	pop	r16
    1644:	ff 90       	pop	r15
    1646:	ef 90       	pop	r14
    1648:	df 90       	pop	r13
    164a:	cf 90       	pop	r12
    164c:	bf 90       	pop	r11
    164e:	af 90       	pop	r10
    1650:	9f 90       	pop	r9
    1652:	8f 90       	pop	r8
    1654:	7f 90       	pop	r7
    1656:	6f 90       	pop	r6
    1658:	5f 90       	pop	r5
    165a:	4f 90       	pop	r4
    165c:	3f 90       	pop	r3
    165e:	2f 90       	pop	r2
    1660:	08 95       	ret

00001662 <strlen_P>:
    1662:	fc 01       	movw	r30, r24
    1664:	05 90       	lpm	r0, Z+
    1666:	00 20       	and	r0, r0
    1668:	e9 f7       	brne	.-6      	; 0x1664 <strlen_P+0x2>
    166a:	80 95       	com	r24
    166c:	90 95       	com	r25
    166e:	8e 0f       	add	r24, r30
    1670:	9f 1f       	adc	r25, r31
    1672:	08 95       	ret

00001674 <strnlen_P>:
    1674:	fc 01       	movw	r30, r24
    1676:	05 90       	lpm	r0, Z+
    1678:	61 50       	subi	r22, 0x01	; 1
    167a:	70 40       	sbci	r23, 0x00	; 0
    167c:	01 10       	cpse	r0, r1
    167e:	d8 f7       	brcc	.-10     	; 0x1676 <strnlen_P+0x2>
    1680:	80 95       	com	r24
    1682:	90 95       	com	r25
    1684:	8e 0f       	add	r24, r30
    1686:	9f 1f       	adc	r25, r31
    1688:	08 95       	ret

0000168a <strnlen>:
    168a:	fc 01       	movw	r30, r24
    168c:	61 50       	subi	r22, 0x01	; 1
    168e:	70 40       	sbci	r23, 0x00	; 0
    1690:	01 90       	ld	r0, Z+
    1692:	01 10       	cpse	r0, r1
    1694:	d8 f7       	brcc	.-10     	; 0x168c <strnlen+0x2>
    1696:	80 95       	com	r24
    1698:	90 95       	com	r25
    169a:	8e 0f       	add	r24, r30
    169c:	9f 1f       	adc	r25, r31
    169e:	08 95       	ret

000016a0 <fputc>:
    16a0:	0f 93       	push	r16
    16a2:	1f 93       	push	r17
    16a4:	cf 93       	push	r28
    16a6:	df 93       	push	r29
    16a8:	8c 01       	movw	r16, r24
    16aa:	eb 01       	movw	r28, r22
    16ac:	8b 81       	ldd	r24, Y+3	; 0x03
    16ae:	99 27       	eor	r25, r25
    16b0:	81 ff       	sbrs	r24, 1
    16b2:	1c c0       	rjmp	.+56     	; 0x16ec <fputc+0x4c>
    16b4:	82 ff       	sbrs	r24, 2
    16b6:	0d c0       	rjmp	.+26     	; 0x16d2 <fputc+0x32>
    16b8:	2e 81       	ldd	r18, Y+6	; 0x06
    16ba:	3f 81       	ldd	r19, Y+7	; 0x07
    16bc:	8c 81       	ldd	r24, Y+4	; 0x04
    16be:	9d 81       	ldd	r25, Y+5	; 0x05
    16c0:	28 17       	cp	r18, r24
    16c2:	39 07       	cpc	r19, r25
    16c4:	64 f4       	brge	.+24     	; 0x16de <fputc+0x3e>
    16c6:	e8 81       	ld	r30, Y
    16c8:	f9 81       	ldd	r31, Y+1	; 0x01
    16ca:	01 93       	st	Z+, r16
    16cc:	f9 83       	std	Y+1, r31	; 0x01
    16ce:	e8 83       	st	Y, r30
    16d0:	06 c0       	rjmp	.+12     	; 0x16de <fputc+0x3e>
    16d2:	e8 85       	ldd	r30, Y+8	; 0x08
    16d4:	f9 85       	ldd	r31, Y+9	; 0x09
    16d6:	80 2f       	mov	r24, r16
    16d8:	09 95       	icall
    16da:	89 2b       	or	r24, r25
    16dc:	39 f4       	brne	.+14     	; 0x16ec <fputc+0x4c>
    16de:	8e 81       	ldd	r24, Y+6	; 0x06
    16e0:	9f 81       	ldd	r25, Y+7	; 0x07
    16e2:	01 96       	adiw	r24, 0x01	; 1
    16e4:	9f 83       	std	Y+7, r25	; 0x07
    16e6:	8e 83       	std	Y+6, r24	; 0x06
    16e8:	c8 01       	movw	r24, r16
    16ea:	02 c0       	rjmp	.+4      	; 0x16f0 <fputc+0x50>
    16ec:	8f ef       	ldi	r24, 0xFF	; 255
    16ee:	9f ef       	ldi	r25, 0xFF	; 255
    16f0:	df 91       	pop	r29
    16f2:	cf 91       	pop	r28
    16f4:	1f 91       	pop	r17
    16f6:	0f 91       	pop	r16
    16f8:	08 95       	ret

000016fa <__mulsi3>:
    16fa:	62 9f       	mul	r22, r18
    16fc:	d0 01       	movw	r26, r0
    16fe:	73 9f       	mul	r23, r19
    1700:	f0 01       	movw	r30, r0
    1702:	82 9f       	mul	r24, r18
    1704:	e0 0d       	add	r30, r0
    1706:	f1 1d       	adc	r31, r1
    1708:	64 9f       	mul	r22, r20
    170a:	e0 0d       	add	r30, r0
    170c:	f1 1d       	adc	r31, r1
    170e:	92 9f       	mul	r25, r18
    1710:	f0 0d       	add	r31, r0
    1712:	83 9f       	mul	r24, r19
    1714:	f0 0d       	add	r31, r0
    1716:	74 9f       	mul	r23, r20
    1718:	f0 0d       	add	r31, r0
    171a:	65 9f       	mul	r22, r21
    171c:	f0 0d       	add	r31, r0
    171e:	99 27       	eor	r25, r25
    1720:	72 9f       	mul	r23, r18
    1722:	b0 0d       	add	r27, r0
    1724:	e1 1d       	adc	r30, r1
    1726:	f9 1f       	adc	r31, r25
    1728:	63 9f       	mul	r22, r19
    172a:	b0 0d       	add	r27, r0
    172c:	e1 1d       	adc	r30, r1
    172e:	f9 1f       	adc	r31, r25
    1730:	bd 01       	movw	r22, r26
    1732:	cf 01       	movw	r24, r30
    1734:	11 24       	eor	r1, r1
    1736:	08 95       	ret

00001738 <__udivmodsi4>:
    1738:	a1 e2       	ldi	r26, 0x21	; 33
    173a:	1a 2e       	mov	r1, r26
    173c:	aa 1b       	sub	r26, r26
    173e:	bb 1b       	sub	r27, r27
    1740:	fd 01       	movw	r30, r26
    1742:	0d c0       	rjmp	.+26     	; 0x175e <__udivmodsi4_ep>

00001744 <__udivmodsi4_loop>:
    1744:	aa 1f       	adc	r26, r26
    1746:	bb 1f       	adc	r27, r27
    1748:	ee 1f       	adc	r30, r30
    174a:	ff 1f       	adc	r31, r31
    174c:	a2 17       	cp	r26, r18
    174e:	b3 07       	cpc	r27, r19
    1750:	e4 07       	cpc	r30, r20
    1752:	f5 07       	cpc	r31, r21
    1754:	20 f0       	brcs	.+8      	; 0x175e <__udivmodsi4_ep>
    1756:	a2 1b       	sub	r26, r18
    1758:	b3 0b       	sbc	r27, r19
    175a:	e4 0b       	sbc	r30, r20
    175c:	f5 0b       	sbc	r31, r21

0000175e <__udivmodsi4_ep>:
    175e:	66 1f       	adc	r22, r22
    1760:	77 1f       	adc	r23, r23
    1762:	88 1f       	adc	r24, r24
    1764:	99 1f       	adc	r25, r25
    1766:	1a 94       	dec	r1
    1768:	69 f7       	brne	.-38     	; 0x1744 <__udivmodsi4_loop>
    176a:	60 95       	com	r22
    176c:	70 95       	com	r23
    176e:	80 95       	com	r24
    1770:	90 95       	com	r25
    1772:	9b 01       	movw	r18, r22
    1774:	ac 01       	movw	r20, r24
    1776:	bd 01       	movw	r22, r26
    1778:	cf 01       	movw	r24, r30
    177a:	08 95       	ret
